%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2022 6:49:00 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
q
Q
1.50000 w
1.00000 w
q
Q
1.50000 w
q
q
1.00000 0 0 RG
52.0000 1.00289 327.979 346.997 rc
newpath
53.0000 146.942 m
57.3330 141.530 l
61.6661 136.103 l
65.9991 130.665 l
70.3322 125.218 l
74.6652 119.768 l
78.9983 114.320 l
83.3313 108.879 l
87.6644 103.454 l
91.9975 98.0525 l
96.3305 92.6844 l
100.663 87.3605 l
104.996 82.0925 l
109.329 76.8929 l
113.662 71.7749 l
117.995 66.7524 l
122.328 61.8391 l
126.661 57.0493 l
130.995 52.3967 l
135.328 47.8948 l
139.661 43.5564 l
143.994 39.3938 l
148.327 35.4183 l
152.660 31.6401 l
156.993 28.0687 l
161.326 24.7124 l
165.659 21.5788 l
169.992 18.6742 l
174.325 16.0042 l
178.658 13.5737 l
182.991 11.3867 l
187.324 9.44674 l
191.657 7.75683 l
195.990 6.31955 l
200.323 5.13736 l
204.657 4.21243 l
208.990 3.54684 l
213.323 3.14288 l
217.656 3.00289 l
221.989 3.12963 l
226.322 3.52612 l
230.655 4.19583 l
234.988 5.14300 l
239.321 6.37258 l
243.654 7.89047 l
247.987 9.70361 l
252.320 11.8202 l
256.653 14.2501 l
260.986 17.0049 l
265.319 20.0983 l
269.652 23.5466 l
273.985 27.3694 l
278.318 31.5900 l
282.651 36.2369 l
286.985 41.3442 l
291.318 46.9545 l
295.651 53.1206 l
299.984 59.9096 l
304.317 67.4096 l
308.650 75.7353 l
312.983 85.0476 l
317.316 95.5786 l
321.649 107.686 l
325.982 121.979 l
330.315 139.660 l
334.648 163.958 l
338.981 220.180 l
343.314 218.261 l
347.647 216.338 l
351.980 214.416 l
356.313 212.494 l
360.647 210.572 l
364.980 208.651 l
369.313 206.729 l
373.646 204.808 l
377.979 202.886 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
[ 2.00000 5.00000 ] 0 d
0 0 1.00000 RG
52.0000 1.00289 327.979 346.997 rc
newpath
53.0000 347.000 m
57.3330 345.078 l
61.6661 343.157 l
65.9991 341.235 l
70.3322 339.314 l
74.6652 337.392 l
78.9983 335.470 l
83.3313 333.549 l
87.6644 331.628 l
91.9975 329.706 l
96.3305 327.784 l
100.663 325.863 l
104.996 323.941 l
109.329 322.020 l
113.662 320.098 l
117.995 318.177 l
122.328 316.255 l
126.661 314.334 l
130.995 312.412 l
135.328 310.491 l
139.661 308.569 l
143.994 306.648 l
148.327 304.726 l
152.660 302.805 l
156.993 300.883 l
161.326 298.962 l
165.659 297.040 l
169.992 295.119 l
174.325 293.197 l
178.658 291.276 l
182.991 289.354 l
187.324 287.433 l
191.657 285.511 l
195.990 283.590 l
200.323 281.668 l
204.657 279.747 l
208.990 277.825 l
213.323 275.904 l
217.656 273.982 l
221.989 272.061 l
226.322 270.139 l
230.655 268.218 l
234.988 266.296 l
239.321 264.375 l
243.654 262.453 l
247.987 260.532 l
252.320 258.610 l
256.653 256.689 l
260.986 254.767 l
265.319 252.846 l
269.652 250.924 l
273.985 249.003 l
278.318 247.081 l
282.651 245.160 l
286.985 243.238 l
291.318 241.317 l
295.651 239.395 l
299.984 237.474 l
304.317 235.552 l
308.650 233.631 l
312.983 231.709 l
317.316 229.788 l
321.649 227.866 l
325.982 225.945 l
330.315 224.023 l
334.648 222.102 l
338.981 220.180 l
343.314 218.259 l
347.647 216.337 l
351.980 214.416 l
356.313 212.494 l
360.647 210.573 l
364.980 208.651 l
369.313 206.730 l
373.646 204.808 l
377.979 202.887 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
1.00000 w
newpath
51.0000 349.000 m
377.979 349.000 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
207 371 17 18 rc
newpath
217.203 386.000 m
217.859 382.656 l
217.255 383.729 216.578 384.585 215.828 385.226  c
215.078 385.867 214.380 386.187 213.734 386.187  c
213.265 386.187 212.888 386.020 212.601 385.687  c
212.315 385.354 212.171 384.911 212.171 384.359  c
212.171 382.765 212.731 381.286 213.851 379.921  c
214.971 378.557 216.182 377.875 217.484 377.875  c
217.744 377.875 218.099 377.916 218.546 378.000  c
218.781 378.046 l
220.218 378.046 l
219.015 384.109 l
218.932 384.505 218.890 384.849 218.890 385.140  c
218.890 385.359 219.078 385.479 219.453 385.500  c
219.953 385.531 l
220.078 385.546 l
220.000 386.000 l
217.203 386.000 l
h
218.078 381.562 m
218.609 379.015 l
218.036 378.724 217.432 378.578 216.796 378.578  c
216.067 378.578 215.479 378.906 215.031 379.562  c
214.666 380.104 214.354 380.812 214.093 381.687  c
213.833 382.562 213.703 383.354 213.703 384.062  c
213.703 384.760 213.932 385.109 214.390 385.109  c
215.338 385.109 216.567 383.927 218.078 381.562  c
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
74.6652 349.000 m
74.6652 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
72.5000 373.265 m
71.3854 373.265 70.4843 372.747 69.7968 371.710  c
69.1093 370.674 68.7656 369.307 68.7656 367.609  c
68.7656 365.869 69.1093 364.481 69.7968 363.445  c
70.4843 362.408 71.4062 361.890 72.5625 361.890  c
73.7187 361.890 74.6406 362.406 75.3281 363.437  c
76.0156 364.468 76.3593 365.854 76.3593 367.593  c
76.3593 369.333 76.0130 370.713 75.3203 371.734  c
74.6276 372.755 73.6875 373.265 72.5000 373.265  c
h
72.5312 372.812 m
74.0625 372.885 74.8281 371.114 74.8281 367.500  c
74.8281 364.052 74.0729 362.328 72.5625 362.328  c
71.0625 362.328 70.3125 364.078 70.3125 367.578  c
70.3125 371.005 71.0520 372.750 72.5312 372.812  c
h
78.0781 373.000 m
78.0781 371.187 l
79.8906 371.187 l
79.8906 373.000 l
78.0781 373.000 l
h
83.0625 373.000 m
83.2708 371.822 83.6171 370.799 84.1015 369.929  c
84.5859 369.059 85.7291 367.411 87.5312 364.984  c
88.6250 363.515 l
82.5156 363.515 l
82.5156 362.156 l
89.4687 362.156 l
89.4687 363.109 l
86.5000 367.099 84.9322 370.395 84.7656 373.000  c
83.0625 373.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
117.995 349.000 m
117.995 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
115.500 373.265 m
114.385 373.265 113.484 372.747 112.796 371.710  c
112.109 370.674 111.765 369.307 111.765 367.609  c
111.765 365.869 112.109 364.481 112.796 363.445  c
113.484 362.408 114.406 361.890 115.562 361.890  c
116.718 361.890 117.640 362.406 118.328 363.437  c
119.015 364.468 119.359 365.854 119.359 367.593  c
119.359 369.333 119.013 370.713 118.320 371.734  c
117.627 372.755 116.687 373.265 115.500 373.265  c
h
115.531 372.812 m
117.062 372.885 117.828 371.114 117.828 367.500  c
117.828 364.052 117.072 362.328 115.562 362.328  c
114.062 362.328 113.312 364.078 113.312 367.578  c
113.312 371.005 114.052 372.750 115.531 372.812  c
h
121.078 373.000 m
121.078 371.187 l
122.890 371.187 l
122.890 373.000 l
121.078 373.000 l
h
127.140 367.156 m
126.026 366.395 125.468 365.557 125.468 364.640  c
125.468 363.817 125.765 363.151 126.359 362.640  c
126.953 362.130 127.729 361.875 128.687 361.875  c
129.604 361.875 130.335 362.091 130.882 362.523  c
131.429 362.955 131.703 363.536 131.703 364.265  c
131.703 365.369 130.989 366.286 129.562 367.015  c
131.291 367.755 132.156 368.812 132.156 370.187  c
132.156 371.093 131.812 371.833 131.125 372.406  c
130.437 372.979 129.552 373.265 128.468 373.265  c
127.416 373.265 126.562 373.000 125.906 372.468  c
125.250 371.937 124.921 371.234 124.921 370.359  c
124.921 368.911 125.661 367.843 127.140 367.156  c
h
129.156 366.781 m
130.010 366.156 130.437 365.322 130.437 364.281  c
130.437 363.697 130.263 363.226 129.914 362.867  c
129.565 362.507 129.109 362.328 128.546 362.328  c
128.036 362.328 127.604 362.505 127.250 362.859  c
126.895 363.213 126.718 363.651 126.718 364.171  c
126.718 364.671 126.880 365.093 127.203 365.437  c
127.526 365.781 128.177 366.229 129.156 366.781  c
h
127.468 367.484 m
126.729 368.151 126.359 369.052 126.359 370.187  c
126.359 370.989 126.557 371.627 126.953 372.101  c
127.349 372.575 127.880 372.812 128.546 372.812  c
129.171 372.812 129.687 372.604 130.093 372.187  c
130.500 371.770 130.703 371.244 130.703 370.609  c
130.703 370.078 130.546 369.632 130.234 369.273  c
129.921 368.914 129.338 368.500 128.484 368.031  c
127.468 367.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
161.326 349.000 m
161.326 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
159.500 373.265 m
158.385 373.265 157.484 372.747 156.796 371.710  c
156.109 370.674 155.765 369.307 155.765 367.609  c
155.765 365.869 156.109 364.481 156.796 363.445  c
157.484 362.408 158.406 361.890 159.562 361.890  c
160.718 361.890 161.640 362.406 162.328 363.437  c
163.015 364.468 163.359 365.854 163.359 367.593  c
163.359 369.333 163.013 370.713 162.320 371.734  c
161.627 372.755 160.687 373.265 159.500 373.265  c
h
159.531 372.812 m
161.062 372.885 161.828 371.114 161.828 367.500  c
161.828 364.052 161.072 362.328 159.562 362.328  c
158.062 362.328 157.312 364.078 157.312 367.578  c
157.312 371.005 158.052 372.750 159.531 372.812  c
h
165.078 373.000 m
165.078 371.187 l
166.890 371.187 l
166.890 373.000 l
165.078 373.000 l
h
174.687 367.703 m
174.010 368.651 173.140 369.125 172.078 369.125  c
171.130 369.125 170.356 368.807 169.757 368.171  c
169.158 367.536 168.859 366.718 168.859 365.718  c
168.859 364.635 169.197 363.724 169.875 362.984  c
170.552 362.244 171.395 361.875 172.406 361.875  c
173.625 361.875 174.565 362.356 175.226 363.320  c
175.888 364.283 176.218 365.645 176.218 367.406  c
176.218 369.270 175.838 370.713 175.078 371.734  c
174.317 372.755 173.244 373.265 171.859 373.265  c
170.953 373.265 170.156 373.104 169.468 372.781  c
169.468 371.062 l
170.187 371.062 l
170.203 371.218 l
170.234 371.734 l
170.265 372.057 170.442 372.317 170.765 372.515  c
171.088 372.713 171.494 372.812 171.984 372.812  c
172.838 372.812 173.502 372.367 173.976 371.476  c
174.450 370.585 174.687 369.328 174.687 367.703  c
h
174.640 366.156 m
174.640 365.031 174.414 364.114 173.960 363.406  c
173.507 362.697 172.927 362.343 172.218 362.343  c
170.937 362.343 170.296 363.401 170.296 365.515  c
170.296 367.578 170.963 368.609 172.296 368.609  c
173.015 368.609 173.585 368.385 174.007 367.937  c
174.429 367.489 174.640 366.895 174.640 366.156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
204.657 349.000 m
204.657 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
203.281 362.062 m
203.281 371.109 l
203.328 371.828 l
203.349 372.119 203.434 372.309 203.585 372.398  c
203.737 372.487 204.046 372.531 204.515 372.531  c
205.375 372.546 l
205.375 373.000 l
199.765 373.000 l
199.765 372.546 l
200.625 372.531 l
201.083 372.531 201.388 372.487 201.539 372.398  c
201.690 372.309 201.776 372.119 201.796 371.828  c
201.843 371.109 l
201.843 364.375 l
201.796 363.640 l
201.796 363.296 201.697 363.125 201.500 363.125  c
201.354 363.125 201.015 363.171 200.484 363.265  c
199.765 363.390 l
199.765 362.937 l
203.281 362.062 l
h
208.078 373.000 m
208.078 371.187 l
209.890 371.187 l
209.890 373.000 l
208.078 373.000 l
h
215.500 373.265 m
214.385 373.265 213.484 372.747 212.796 371.710  c
212.109 370.674 211.765 369.307 211.765 367.609  c
211.765 365.869 212.109 364.481 212.796 363.445  c
213.484 362.408 214.406 361.890 215.562 361.890  c
216.718 361.890 217.640 362.406 218.328 363.437  c
219.015 364.468 219.359 365.854 219.359 367.593  c
219.359 369.333 219.013 370.713 218.320 371.734  c
217.627 372.755 216.687 373.265 215.500 373.265  c
h
215.531 372.812 m
217.062 372.885 217.828 371.114 217.828 367.500  c
217.828 364.052 217.072 362.328 215.562 362.328  c
214.062 362.328 213.312 364.078 213.312 367.578  c
213.312 371.005 214.052 372.750 215.531 372.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
247.987 349.000 m
247.987 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
246.281 362.062 m
246.281 371.109 l
246.328 371.828 l
246.349 372.119 246.434 372.309 246.585 372.398  c
246.737 372.487 247.046 372.531 247.515 372.531  c
248.375 372.546 l
248.375 373.000 l
242.765 373.000 l
242.765 372.546 l
243.625 372.531 l
244.083 372.531 244.388 372.487 244.539 372.398  c
244.690 372.309 244.776 372.119 244.796 371.828  c
244.843 371.109 l
244.843 364.375 l
244.796 363.640 l
244.796 363.296 244.697 363.125 244.500 363.125  c
244.354 363.125 244.015 363.171 243.484 363.265  c
242.765 363.390 l
242.765 362.937 l
246.281 362.062 l
h
251.078 373.000 m
251.078 371.187 l
252.890 371.187 l
252.890 373.000 l
251.078 373.000 l
h
259.281 362.062 m
259.281 371.109 l
259.328 371.828 l
259.349 372.119 259.434 372.309 259.585 372.398  c
259.737 372.487 260.046 372.531 260.515 372.531  c
261.375 372.546 l
261.375 373.000 l
255.765 373.000 l
255.765 372.546 l
256.625 372.531 l
257.083 372.531 257.388 372.487 257.539 372.398  c
257.690 372.309 257.776 372.119 257.796 371.828  c
257.843 371.109 l
257.843 364.375 l
257.796 363.640 l
257.796 363.296 257.697 363.125 257.500 363.125  c
257.354 363.125 257.015 363.171 256.484 363.265  c
255.765 363.390 l
255.765 362.937 l
259.281 362.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
291.318 349.000 m
291.318 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
290.281 362.062 m
290.281 371.109 l
290.328 371.828 l
290.349 372.119 290.434 372.309 290.585 372.398  c
290.737 372.487 291.046 372.531 291.515 372.531  c
292.375 372.546 l
292.375 373.000 l
286.765 373.000 l
286.765 372.546 l
287.625 372.531 l
288.083 372.531 288.388 372.487 288.539 372.398  c
288.690 372.309 288.776 372.119 288.796 371.828  c
288.843 371.109 l
288.843 364.375 l
288.796 363.640 l
288.796 363.296 288.697 363.125 288.500 363.125  c
288.354 363.125 288.015 363.171 287.484 363.265  c
286.765 363.390 l
286.765 362.937 l
290.281 362.062 l
h
295.078 373.000 m
295.078 371.187 l
296.890 371.187 l
296.890 373.000 l
295.078 373.000 l
h
299.171 373.000 m
299.171 372.281 l
299.588 371.062 300.239 370.041 301.125 369.218  c
301.906 368.500 l
302.802 367.656 303.398 366.987 303.695 366.492  c
303.992 365.997 304.140 365.432 304.140 364.796  c
304.140 364.057 303.958 363.463 303.593 363.015  c
303.229 362.567 302.750 362.343 302.156 362.343  c
301.489 362.343 300.927 362.526 300.468 362.890  c
300.302 363.026 300.192 363.510 300.140 364.343  c
300.140 364.515 l
299.406 364.515 l
299.406 362.546 l
300.458 362.099 301.432 361.875 302.328 361.875  c
303.307 361.875 304.109 362.151 304.734 362.703  c
305.359 363.255 305.671 363.953 305.671 364.796  c
305.671 365.942 304.963 367.000 303.546 367.968  c
302.671 368.578 l
301.265 369.546 300.494 370.599 300.359 371.734  c
305.625 371.734 l
305.625 373.000 l
299.171 373.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
334.648 349.000 m
334.648 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
333.281 362.062 m
333.281 371.109 l
333.328 371.828 l
333.349 372.119 333.434 372.309 333.585 372.398  c
333.737 372.487 334.046 372.531 334.515 372.531  c
335.375 372.546 l
335.375 373.000 l
329.765 373.000 l
329.765 372.546 l
330.625 372.531 l
331.083 372.531 331.388 372.487 331.539 372.398  c
331.690 372.309 331.776 372.119 331.796 371.828  c
331.843 371.109 l
331.843 364.375 l
331.796 363.640 l
331.796 363.296 331.697 363.125 331.500 363.125  c
331.354 363.125 331.015 363.171 330.484 363.265  c
329.765 363.390 l
329.765 362.937 l
333.281 362.062 l
h
338.078 373.000 m
338.078 371.187 l
339.890 371.187 l
339.890 373.000 l
338.078 373.000 l
h
342.359 372.921 m
342.359 371.015 l
343.078 371.015 l
343.093 371.171 l
343.109 371.687 l
343.109 372.000 343.294 372.268 343.664 372.492  c
344.033 372.716 344.484 372.828 345.015 372.828  c
345.651 372.828 346.164 372.575 346.554 372.070  c
346.945 371.565 347.140 370.895 347.140 370.062  c
347.140 369.239 346.885 368.596 346.375 368.132  c
345.864 367.669 345.156 367.437 344.250 367.437  c
343.343 367.437 l
343.343 367.000 l
343.828 367.000 l
345.880 367.000 346.906 366.177 346.906 364.531  c
346.906 363.062 346.260 362.328 344.968 362.328  c
344.406 362.328 343.911 362.447 343.484 362.687  c
343.328 362.781 343.224 363.171 343.171 363.859  c
343.156 363.968 l
342.437 363.968 l
342.437 362.312 l
343.218 362.020 344.104 361.875 345.093 361.875  c
346.093 361.875 346.885 362.099 347.468 362.546  c
348.052 362.994 348.343 363.604 348.343 364.375  c
348.343 365.666 347.583 366.588 346.062 367.140  c
346.989 367.380 347.653 367.721 348.054 368.164  c
348.455 368.606 348.656 369.224 348.656 370.015  c
348.656 371.015 348.333 371.807 347.687 372.390  c
347.041 372.974 346.161 373.265 345.046 373.265  c
344.015 373.265 343.119 373.151 342.359 372.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
377.979 349.000 m
377.979 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
376.281 362.062 m
376.281 371.109 l
376.328 371.828 l
376.349 372.119 376.434 372.309 376.585 372.398  c
376.737 372.487 377.046 372.531 377.515 372.531  c
378.375 372.546 l
378.375 373.000 l
372.765 373.000 l
372.765 372.546 l
373.625 372.531 l
374.083 372.531 374.388 372.487 374.539 372.398  c
374.690 372.309 374.776 372.119 374.796 371.828  c
374.843 371.109 l
374.843 364.375 l
374.796 363.640 l
374.796 363.296 374.697 363.125 374.500 363.125  c
374.354 363.125 374.015 363.171 373.484 363.265  c
372.765 363.390 l
372.765 362.937 l
376.281 362.062 l
h
381.078 373.000 m
381.078 371.187 l
382.890 371.187 l
382.890 373.000 l
381.078 373.000 l
h
389.421 369.937 m
384.453 369.937 l
384.453 369.203 l
389.875 361.984 l
390.687 361.984 l
390.687 368.843 l
392.140 368.843 l
392.140 369.937 l
390.687 369.937 l
390.687 371.109 l
390.687 371.682 390.731 372.052 390.820 372.218  c
390.908 372.385 391.104 372.479 391.406 372.500  c
391.906 372.531 l
392.046 372.546 l
392.046 373.000 l
387.890 373.000 l
387.890 372.546 l
388.015 372.531 l
388.781 372.500 l
389.041 372.489 389.213 372.393 389.296 372.210  c
389.380 372.028 389.421 371.661 389.421 371.109  c
389.421 369.937 l
h
385.265 368.843 m
389.421 368.843 l
389.421 363.312 l
385.265 368.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
96.3305 349.000 m
96.3305 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
139.661 349.000 m
139.661 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
182.991 349.000 m
182.991 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
226.322 349.000 m
226.322 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
269.652 349.000 m
269.652 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
312.983 349.000 m
312.983 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
356.313 349.000 m
356.313 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
51.0000 349.000 m
51.0000 3.00289 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 163 19 24 rc
newpath
4.96875 180.890 m
5.86458 180.265 6.98958 179.328 8.34375 178.078  c
8.62500 177.812 l
8.56250 176.677 8.41666 175.481 8.18750 174.226  c
7.95833 172.971 7.71875 172.062 7.46875 171.500  c
7.25000 171.031 7.07812 170.755 6.95312 170.671  c
6.82812 170.588 6.48958 170.531 5.93750 170.500  c
5.76562 170.500 l
5.84375 170.046 l
8.51562 170.046 l
9.27604 171.838 9.70833 173.942 9.81250 176.359  c
10.7187 175.187 l
11.6041 174.062 12.1953 173.237 12.4921 172.710  c
12.7890 172.184 12.9375 171.697 12.9375 171.250  c
12.9375 170.791 12.7447 170.390 12.3593 170.046  c
14.1718 170.046 l
14.2760 170.265 14.3281 170.474 14.3281 170.671  c
14.3281 171.088 14.1927 171.523 13.9218 171.976  c
13.6510 172.429 13.0833 173.171 12.2187 174.203  c
9.45312 177.531 l
8.34895 178.854 7.52083 179.974 6.96875 180.890  c
4.96875 180.890 l
h
f
newpath
14.2343 185.000 m
15.2031 180.156 l
15.2656 179.833 15.2968 179.557 15.2968 179.328  c
15.2968 179.151 15.1458 179.052 14.8437 179.031  c
14.4531 179.000 l
14.3437 179.000 l
14.4062 178.640 l
16.6562 178.640 l
15.6875 183.484 l
15.6250 183.807 15.5937 184.083 15.5937 184.312  c
15.5937 184.489 15.7447 184.583 16.0468 184.593  c
16.4375 184.625 l
16.5468 184.640 l
16.4687 185.000 l
14.2343 185.000 l
h
15.7187 177.484 m
15.9531 176.328 l
17.1093 176.328 l
16.8906 177.484 l
15.7187 177.484 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
51.0000 318.177 m
47.0000 318.177 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
34.2812 318.062 m
34.2812 327.109 l
34.3281 327.828 l
34.3489 328.119 34.4349 328.309 34.5859 328.398  c
34.7369 328.487 35.0468 328.531 35.5156 328.531  c
36.3750 328.546 l
36.3750 329.000 l
30.7656 329.000 l
30.7656 328.546 l
31.6250 328.531 l
32.0833 328.531 32.3880 328.487 32.5390 328.398  c
32.6901 328.309 32.7760 328.119 32.7968 327.828  c
32.8437 327.109 l
32.8437 320.375 l
32.7968 319.640 l
32.7968 319.296 32.6979 319.125 32.5000 319.125  c
32.3541 319.125 32.0156 319.171 31.4843 319.265  c
30.7656 319.390 l
30.7656 318.937 l
34.2812 318.062 l
h
39.0781 329.000 m
39.0781 327.187 l
40.8906 327.187 l
40.8906 329.000 l
39.0781 329.000 l
h
45.1406 323.156 m
44.0260 322.395 43.4687 321.557 43.4687 320.640  c
43.4687 319.817 43.7656 319.151 44.3593 318.640  c
44.9531 318.130 45.7291 317.875 46.6875 317.875  c
47.6041 317.875 48.3359 318.091 48.8828 318.523  c
49.4296 318.955 49.7031 319.536 49.7031 320.265  c
49.7031 321.369 48.9895 322.286 47.5625 323.015  c
49.2916 323.755 50.1562 324.812 50.1562 326.187  c
50.1562 327.093 49.8125 327.833 49.1250 328.406  c
48.4375 328.979 47.5520 329.265 46.4687 329.265  c
45.4166 329.265 44.5625 329.000 43.9062 328.468  c
43.2500 327.937 42.9218 327.234 42.9218 326.359  c
42.9218 324.911 43.6614 323.843 45.1406 323.156  c
h
47.1562 322.781 m
48.0104 322.156 48.4375 321.322 48.4375 320.281  c
48.4375 319.697 48.2630 319.226 47.9140 318.867  c
47.5651 318.507 47.1093 318.328 46.5468 318.328  c
46.0364 318.328 45.6041 318.505 45.2500 318.859  c
44.8958 319.213 44.7187 319.651 44.7187 320.171  c
44.7187 320.671 44.8802 321.093 45.2031 321.437  c
45.5260 321.781 46.1770 322.229 47.1562 322.781  c
h
45.4687 323.484 m
44.7291 324.151 44.3593 325.052 44.3593 326.187  c
44.3593 326.989 44.5572 327.627 44.9531 328.101  c
45.3489 328.575 45.8802 328.812 46.5468 328.812  c
47.1718 328.812 47.6875 328.604 48.0937 328.187  c
48.5000 327.770 48.7031 327.244 48.7031 326.609  c
48.7031 326.078 48.5468 325.632 48.2343 325.273  c
47.9218 324.914 47.3385 324.500 46.4843 324.031  c
45.4687 323.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 279.747 m
47.0000 279.747 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.1718 290.000 m
30.1718 289.281 l
30.5885 288.062 31.2395 287.041 32.1250 286.218  c
32.9062 285.500 l
33.8020 284.656 34.3984 283.987 34.6953 283.492  c
34.9921 282.997 35.1406 282.432 35.1406 281.796  c
35.1406 281.057 34.9583 280.463 34.5937 280.015  c
34.2291 279.567 33.7500 279.343 33.1562 279.343  c
32.4895 279.343 31.9270 279.526 31.4687 279.890  c
31.3020 280.026 31.1927 280.510 31.1406 281.343  c
31.1406 281.515 l
30.4062 281.515 l
30.4062 279.546 l
31.4583 279.099 32.4322 278.875 33.3281 278.875  c
34.3072 278.875 35.1093 279.151 35.7343 279.703  c
36.3593 280.255 36.6718 280.953 36.6718 281.796  c
36.6718 282.942 35.9635 284.000 34.5468 284.968  c
33.6718 285.578 l
32.2656 286.546 31.4947 287.599 31.3593 288.734  c
36.6250 288.734 l
36.6250 290.000 l
30.1718 290.000 l
h
39.0781 290.000 m
39.0781 288.187 l
40.8906 288.187 l
40.8906 290.000 l
39.0781 290.000 l
h
46.5000 290.265 m
45.3854 290.265 44.4843 289.747 43.7968 288.710  c
43.1093 287.674 42.7656 286.307 42.7656 284.609  c
42.7656 282.869 43.1093 281.481 43.7968 280.445  c
44.4843 279.408 45.4062 278.890 46.5625 278.890  c
47.7187 278.890 48.6406 279.406 49.3281 280.437  c
50.0156 281.468 50.3593 282.854 50.3593 284.593  c
50.3593 286.333 50.0130 287.713 49.3203 288.734  c
48.6276 289.755 47.6875 290.265 46.5000 290.265  c
h
46.5312 289.812 m
48.0625 289.885 48.8281 288.114 48.8281 284.500  c
48.8281 281.052 48.0729 279.328 46.5625 279.328  c
45.0625 279.328 44.3125 281.078 44.3125 284.578  c
44.3125 288.005 45.0520 289.750 46.5312 289.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 241.317 m
47.0000 241.317 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.1718 252.000 m
30.1718 251.281 l
30.5885 250.062 31.2395 249.041 32.1250 248.218  c
32.9062 247.500 l
33.8020 246.656 34.3984 245.987 34.6953 245.492  c
34.9921 244.997 35.1406 244.432 35.1406 243.796  c
35.1406 243.057 34.9583 242.463 34.5937 242.015  c
34.2291 241.567 33.7500 241.343 33.1562 241.343  c
32.4895 241.343 31.9270 241.526 31.4687 241.890  c
31.3020 242.026 31.1927 242.510 31.1406 243.343  c
31.1406 243.515 l
30.4062 243.515 l
30.4062 241.546 l
31.4583 241.099 32.4322 240.875 33.3281 240.875  c
34.3072 240.875 35.1093 241.151 35.7343 241.703  c
36.3593 242.255 36.6718 242.953 36.6718 243.796  c
36.6718 244.942 35.9635 246.000 34.5468 246.968  c
33.6718 247.578 l
32.2656 248.546 31.4947 249.599 31.3593 250.734  c
36.6250 250.734 l
36.6250 252.000 l
30.1718 252.000 l
h
39.0781 252.000 m
39.0781 250.187 l
40.8906 250.187 l
40.8906 252.000 l
39.0781 252.000 l
h
43.1718 252.000 m
43.1718 251.281 l
43.5885 250.062 44.2395 249.041 45.1250 248.218  c
45.9062 247.500 l
46.8020 246.656 47.3984 245.987 47.6953 245.492  c
47.9921 244.997 48.1406 244.432 48.1406 243.796  c
48.1406 243.057 47.9583 242.463 47.5937 242.015  c
47.2291 241.567 46.7500 241.343 46.1562 241.343  c
45.4895 241.343 44.9270 241.526 44.4687 241.890  c
44.3020 242.026 44.1927 242.510 44.1406 243.343  c
44.1406 243.515 l
43.4062 243.515 l
43.4062 241.546 l
44.4583 241.099 45.4322 240.875 46.3281 240.875  c
47.3072 240.875 48.1093 241.151 48.7343 241.703  c
49.3593 242.255 49.6718 242.953 49.6718 243.796  c
49.6718 244.942 48.9635 246.000 47.5468 246.968  c
46.6718 247.578 l
45.2656 248.546 44.4947 249.599 44.3593 250.734  c
49.6250 250.734 l
49.6250 252.000 l
43.1718 252.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 202.887 m
47.0000 202.887 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.1718 213.000 m
30.1718 212.281 l
30.5885 211.062 31.2395 210.041 32.1250 209.218  c
32.9062 208.500 l
33.8020 207.656 34.3984 206.987 34.6953 206.492  c
34.9921 205.997 35.1406 205.432 35.1406 204.796  c
35.1406 204.057 34.9583 203.463 34.5937 203.015  c
34.2291 202.567 33.7500 202.343 33.1562 202.343  c
32.4895 202.343 31.9270 202.526 31.4687 202.890  c
31.3020 203.026 31.1927 203.510 31.1406 204.343  c
31.1406 204.515 l
30.4062 204.515 l
30.4062 202.546 l
31.4583 202.099 32.4322 201.875 33.3281 201.875  c
34.3072 201.875 35.1093 202.151 35.7343 202.703  c
36.3593 203.255 36.6718 203.953 36.6718 204.796  c
36.6718 205.942 35.9635 207.000 34.5468 207.968  c
33.6718 208.578 l
32.2656 209.546 31.4947 210.599 31.3593 211.734  c
36.6250 211.734 l
36.6250 213.000 l
30.1718 213.000 l
h
39.0781 213.000 m
39.0781 211.187 l
40.8906 211.187 l
40.8906 213.000 l
39.0781 213.000 l
h
47.4218 209.937 m
42.4531 209.937 l
42.4531 209.203 l
47.8750 201.984 l
48.6875 201.984 l
48.6875 208.843 l
50.1406 208.843 l
50.1406 209.937 l
48.6875 209.937 l
48.6875 211.109 l
48.6875 211.682 48.7317 212.052 48.8203 212.218  c
48.9088 212.385 49.1041 212.479 49.4062 212.500  c
49.9062 212.531 l
50.0468 212.546 l
50.0468 213.000 l
45.8906 213.000 l
45.8906 212.546 l
46.0156 212.531 l
46.7812 212.500 l
47.0416 212.489 47.2135 212.393 47.2968 212.210  c
47.3802 212.028 47.4218 211.661 47.4218 211.109  c
47.4218 209.937 l
h
43.2656 208.843 m
47.4218 208.843 l
47.4218 203.312 l
43.2656 208.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 164.456 m
47.0000 164.456 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.1718 175.000 m
30.1718 174.281 l
30.5885 173.062 31.2395 172.041 32.1250 171.218  c
32.9062 170.500 l
33.8020 169.656 34.3984 168.987 34.6953 168.492  c
34.9921 167.997 35.1406 167.432 35.1406 166.796  c
35.1406 166.057 34.9583 165.463 34.5937 165.015  c
34.2291 164.567 33.7500 164.343 33.1562 164.343  c
32.4895 164.343 31.9270 164.526 31.4687 164.890  c
31.3020 165.026 31.1927 165.510 31.1406 166.343  c
31.1406 166.515 l
30.4062 166.515 l
30.4062 164.546 l
31.4583 164.099 32.4322 163.875 33.3281 163.875  c
34.3072 163.875 35.1093 164.151 35.7343 164.703  c
36.3593 165.255 36.6718 165.953 36.6718 166.796  c
36.6718 167.942 35.9635 169.000 34.5468 169.968  c
33.6718 170.578 l
32.2656 171.546 31.4947 172.599 31.3593 173.734  c
36.6250 173.734 l
36.6250 175.000 l
30.1718 175.000 l
h
39.0781 175.000 m
39.0781 173.187 l
40.8906 173.187 l
40.8906 175.000 l
39.0781 175.000 l
h
44.4375 169.453 m
45.1145 168.515 45.9843 168.046 47.0468 168.046  c
47.9947 168.046 48.7682 168.362 49.3671 168.992  c
49.9661 169.622 50.2656 170.437 50.2656 171.437  c
50.2656 172.520 49.9244 173.429 49.2421 174.164  c
48.5599 174.898 47.7187 175.265 46.7187 175.265  c
45.5000 175.265 44.5599 174.789 43.8984 173.835  c
43.2369 172.882 42.9062 171.520 42.9062 169.750  c
42.9062 167.885 43.2864 166.440 44.0468 165.414  c
44.8072 164.388 45.8854 163.875 47.2812 163.875  c
48.1770 163.875 48.9687 164.036 49.6562 164.359  c
49.6562 166.093 l
48.9375 166.093 l
48.9218 165.953 l
48.8906 165.421 l
48.8593 165.099 48.6822 164.835 48.3593 164.632  c
48.0364 164.429 47.6302 164.328 47.1406 164.328  c
46.2864 164.328 45.6224 164.776 45.1484 165.671  c
44.6744 166.567 44.4375 167.828 44.4375 169.453  c
h
44.4843 171.000 m
44.4843 172.114 44.7109 173.028 45.1640 173.742  c
45.6171 174.455 46.1979 174.812 46.9062 174.812  c
48.1770 174.812 48.8125 173.755 48.8125 171.640  c
48.8125 169.578 48.1510 168.546 46.8281 168.546  c
46.1093 168.546 45.5390 168.768 45.1171 169.210  c
44.6953 169.653 44.4843 170.250 44.4843 171.000  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 126.026 m
47.0000 126.026 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.1718 137.000 m
30.1718 136.281 l
30.5885 135.062 31.2395 134.041 32.1250 133.218  c
32.9062 132.500 l
33.8020 131.656 34.3984 130.987 34.6953 130.492  c
34.9921 129.997 35.1406 129.432 35.1406 128.796  c
35.1406 128.057 34.9583 127.463 34.5937 127.015  c
34.2291 126.567 33.7500 126.343 33.1562 126.343  c
32.4895 126.343 31.9270 126.526 31.4687 126.890  c
31.3020 127.026 31.1927 127.510 31.1406 128.343  c
31.1406 128.515 l
30.4062 128.515 l
30.4062 126.546 l
31.4583 126.099 32.4322 125.875 33.3281 125.875  c
34.3072 125.875 35.1093 126.151 35.7343 126.703  c
36.3593 127.255 36.6718 127.953 36.6718 128.796  c
36.6718 129.942 35.9635 131.000 34.5468 131.968  c
33.6718 132.578 l
32.2656 133.546 31.4947 134.599 31.3593 135.734  c
36.6250 135.734 l
36.6250 137.000 l
30.1718 137.000 l
h
39.0781 137.000 m
39.0781 135.187 l
40.8906 135.187 l
40.8906 137.000 l
39.0781 137.000 l
h
45.1406 131.156 m
44.0260 130.395 43.4687 129.557 43.4687 128.640  c
43.4687 127.817 43.7656 127.151 44.3593 126.640  c
44.9531 126.130 45.7291 125.875 46.6875 125.875  c
47.6041 125.875 48.3359 126.091 48.8828 126.523  c
49.4296 126.955 49.7031 127.536 49.7031 128.265  c
49.7031 129.369 48.9895 130.286 47.5625 131.015  c
49.2916 131.755 50.1562 132.812 50.1562 134.187  c
50.1562 135.093 49.8125 135.833 49.1250 136.406  c
48.4375 136.979 47.5520 137.265 46.4687 137.265  c
45.4166 137.265 44.5625 137.000 43.9062 136.468  c
43.2500 135.937 42.9218 135.234 42.9218 134.359  c
42.9218 132.911 43.6614 131.843 45.1406 131.156  c
h
47.1562 130.781 m
48.0104 130.156 48.4375 129.322 48.4375 128.281  c
48.4375 127.697 48.2630 127.226 47.9140 126.867  c
47.5651 126.507 47.1093 126.328 46.5468 126.328  c
46.0364 126.328 45.6041 126.505 45.2500 126.859  c
44.8958 127.213 44.7187 127.651 44.7187 128.171  c
44.7187 128.671 44.8802 129.093 45.2031 129.437  c
45.5260 129.781 46.1770 130.229 47.1562 130.781  c
h
45.4687 131.484 m
44.7291 132.151 44.3593 133.052 44.3593 134.187  c
44.3593 134.989 44.5572 135.627 44.9531 136.101  c
45.3489 136.575 45.8802 136.812 46.5468 136.812  c
47.1718 136.812 47.6875 136.604 48.0937 136.187  c
48.5000 135.770 48.7031 135.244 48.7031 134.609  c
48.7031 134.078 48.5468 133.632 48.2343 133.273  c
47.9218 132.914 47.3385 132.500 46.4843 132.031  c
45.4687 131.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 87.5966 m
47.0000 87.5966 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.3593 97.9218 m
30.3593 96.0156 l
31.0781 96.0156 l
31.0937 96.1718 l
31.1093 96.6875 l
31.1093 97.0000 31.2942 97.2682 31.6640 97.4921  c
32.0338 97.7161 32.4843 97.8281 33.0156 97.8281  c
33.6510 97.8281 34.1640 97.5755 34.5546 97.0703  c
34.9453 96.5651 35.1406 95.8958 35.1406 95.0625  c
35.1406 94.2395 34.8854 93.5963 34.3750 93.1328  c
33.8645 92.6692 33.1562 92.4375 32.2500 92.4375  c
31.3437 92.4375 l
31.3437 92.0000 l
31.8281 92.0000 l
33.8802 92.0000 34.9062 91.1770 34.9062 89.5312  c
34.9062 88.0625 34.2604 87.3281 32.9687 87.3281  c
32.4062 87.3281 31.9114 87.4479 31.4843 87.6875  c
31.3281 87.7812 31.2239 88.1718 31.1718 88.8593  c
31.1562 88.9687 l
30.4375 88.9687 l
30.4375 87.3125 l
31.2187 87.0208 32.1041 86.8750 33.0937 86.8750  c
34.0937 86.8750 34.8854 87.0989 35.4687 87.5468  c
36.0520 87.9947 36.3437 88.6041 36.3437 89.3750  c
36.3437 90.6666 35.5833 91.5885 34.0625 92.1406  c
34.9895 92.3802 35.6536 92.7213 36.0546 93.1640  c
36.4557 93.6067 36.6562 94.2239 36.6562 95.0156  c
36.6562 96.0156 36.3333 96.8072 35.6875 97.3906  c
35.0416 97.9739 34.1614 98.2656 33.0468 98.2656  c
32.0156 98.2656 31.1197 98.1510 30.3593 97.9218  c
h
39.0781 98.0000 m
39.0781 96.1875 l
40.8906 96.1875 l
40.8906 98.0000 l
39.0781 98.0000 l
h
46.5000 98.2656 m
45.3854 98.2656 44.4843 97.7474 43.7968 96.7109  c
43.1093 95.6744 42.7656 94.3072 42.7656 92.6093  c
42.7656 90.8697 43.1093 89.4817 43.7968 88.4453  c
44.4843 87.4088 45.4062 86.8906 46.5625 86.8906  c
47.7187 86.8906 48.6406 87.4062 49.3281 88.4375  c
50.0156 89.4687 50.3593 90.8541 50.3593 92.5937  c
50.3593 94.3333 50.0130 95.7135 49.3203 96.7343  c
48.6276 97.7552 47.6875 98.2656 46.5000 98.2656  c
h
46.5312 97.8125 m
48.0625 97.8854 48.8281 96.1145 48.8281 92.5000  c
48.8281 89.0520 48.0729 87.3281 46.5625 87.3281  c
45.0625 87.3281 44.3125 89.0781 44.3125 92.5781  c
44.3125 96.0052 45.0520 97.7500 46.5312 97.8125  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 49.1664 m
47.0000 49.1664 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.3593 59.9218 m
30.3593 58.0156 l
31.0781 58.0156 l
31.0937 58.1718 l
31.1093 58.6875 l
31.1093 59.0000 31.2942 59.2682 31.6640 59.4921  c
32.0338 59.7161 32.4843 59.8281 33.0156 59.8281  c
33.6510 59.8281 34.1640 59.5755 34.5546 59.0703  c
34.9453 58.5651 35.1406 57.8958 35.1406 57.0625  c
35.1406 56.2395 34.8854 55.5963 34.3750 55.1328  c
33.8645 54.6692 33.1562 54.4375 32.2500 54.4375  c
31.3437 54.4375 l
31.3437 54.0000 l
31.8281 54.0000 l
33.8802 54.0000 34.9062 53.1770 34.9062 51.5312  c
34.9062 50.0625 34.2604 49.3281 32.9687 49.3281  c
32.4062 49.3281 31.9114 49.4479 31.4843 49.6875  c
31.3281 49.7812 31.2239 50.1718 31.1718 50.8593  c
31.1562 50.9687 l
30.4375 50.9687 l
30.4375 49.3125 l
31.2187 49.0208 32.1041 48.8750 33.0937 48.8750  c
34.0937 48.8750 34.8854 49.0989 35.4687 49.5468  c
36.0520 49.9947 36.3437 50.6041 36.3437 51.3750  c
36.3437 52.6666 35.5833 53.5885 34.0625 54.1406  c
34.9895 54.3802 35.6536 54.7213 36.0546 55.1640  c
36.4557 55.6067 36.6562 56.2239 36.6562 57.0156  c
36.6562 58.0156 36.3333 58.8072 35.6875 59.3906  c
35.0416 59.9739 34.1614 60.2656 33.0468 60.2656  c
32.0156 60.2656 31.1197 60.1510 30.3593 59.9218  c
h
39.0781 60.0000 m
39.0781 58.1875 l
40.8906 58.1875 l
40.8906 60.0000 l
39.0781 60.0000 l
h
43.1718 60.0000 m
43.1718 59.2812 l
43.5885 58.0625 44.2395 57.0416 45.1250 56.2187  c
45.9062 55.5000 l
46.8020 54.6562 47.3984 53.9869 47.6953 53.4921  c
47.9921 52.9974 48.1406 52.4322 48.1406 51.7968  c
48.1406 51.0572 47.9583 50.4635 47.5937 50.0156  c
47.2291 49.5677 46.7500 49.3437 46.1562 49.3437  c
45.4895 49.3437 44.9270 49.5260 44.4687 49.8906  c
44.3020 50.0260 44.1927 50.5104 44.1406 51.3437  c
44.1406 51.5156 l
43.4062 51.5156 l
43.4062 49.5468 l
44.4583 49.0989 45.4322 48.8750 46.3281 48.8750  c
47.3072 48.8750 48.1093 49.1510 48.7343 49.7031  c
49.3593 50.2552 49.6718 50.9531 49.6718 51.7968  c
49.6718 52.9427 48.9635 54.0000 47.5468 54.9687  c
46.6718 55.5781 l
45.2656 56.5468 44.4947 57.5989 44.3593 58.7343  c
49.6250 58.7343 l
49.6250 60.0000 l
43.1718 60.0000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 10.7363 m
47.0000 10.7363 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.3593 20.9218 m
30.3593 19.0156 l
31.0781 19.0156 l
31.0937 19.1718 l
31.1093 19.6875 l
31.1093 20.0000 31.2942 20.2682 31.6640 20.4921  c
32.0338 20.7161 32.4843 20.8281 33.0156 20.8281  c
33.6510 20.8281 34.1640 20.5755 34.5546 20.0703  c
34.9453 19.5651 35.1406 18.8958 35.1406 18.0625  c
35.1406 17.2395 34.8854 16.5963 34.3750 16.1328  c
33.8645 15.6692 33.1562 15.4375 32.2500 15.4375  c
31.3437 15.4375 l
31.3437 15.0000 l
31.8281 15.0000 l
33.8802 15.0000 34.9062 14.1770 34.9062 12.5312  c
34.9062 11.0625 34.2604 10.3281 32.9687 10.3281  c
32.4062 10.3281 31.9114 10.4479 31.4843 10.6875  c
31.3281 10.7812 31.2239 11.1718 31.1718 11.8593  c
31.1562 11.9687 l
30.4375 11.9687 l
30.4375 10.3125 l
31.2187 10.0208 32.1041 9.87500 33.0937 9.87500  c
34.0937 9.87500 34.8854 10.0989 35.4687 10.5468  c
36.0520 10.9947 36.3437 11.6041 36.3437 12.3750  c
36.3437 13.6666 35.5833 14.5885 34.0625 15.1406  c
34.9895 15.3802 35.6536 15.7213 36.0546 16.1640  c
36.4557 16.6067 36.6562 17.2239 36.6562 18.0156  c
36.6562 19.0156 36.3333 19.8072 35.6875 20.3906  c
35.0416 20.9739 34.1614 21.2656 33.0468 21.2656  c
32.0156 21.2656 31.1197 21.1510 30.3593 20.9218  c
h
39.0781 21.0000 m
39.0781 19.1875 l
40.8906 19.1875 l
40.8906 21.0000 l
39.0781 21.0000 l
h
47.4218 17.9375 m
42.4531 17.9375 l
42.4531 17.2031 l
47.8750 9.98437 l
48.6875 9.98437 l
48.6875 16.8437 l
50.1406 16.8437 l
50.1406 17.9375 l
48.6875 17.9375 l
48.6875 19.1093 l
48.6875 19.6822 48.7317 20.0520 48.8203 20.2187  c
48.9088 20.3854 49.1041 20.4791 49.4062 20.5000  c
49.9062 20.5312 l
50.0468 20.5468 l
50.0468 21.0000 l
45.8906 21.0000 l
45.8906 20.5468 l
46.0156 20.5312 l
46.7812 20.5000 l
47.0416 20.4895 47.2135 20.3932 47.2968 20.2109  c
47.3802 20.0286 47.4218 19.6614 47.4218 19.1093  c
47.4218 17.9375 l
h
43.2656 16.8437 m
47.4218 16.8437 l
47.4218 11.3125 l
43.2656 16.8437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 337.392 m
49.0000 337.392 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 298.962 m
49.0000 298.962 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 260.532 m
49.0000 260.532 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 222.102 m
49.0000 222.102 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 183.671 m
49.0000 183.671 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 145.241 m
49.0000 145.241 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 106.811 m
49.0000 106.811 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 68.3815 m
49.0000 68.3815 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 29.9514 m
49.0000 29.9514 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
