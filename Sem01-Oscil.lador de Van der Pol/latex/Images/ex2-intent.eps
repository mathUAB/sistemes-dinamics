%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2022 9:51:23 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
1.00000 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
0 0 0 RG
1.00000 w
q
Q
1.50000 w
1.00000 w
q
Q
1.50000 w
1.00000 0 0 RG
q
q
49.0000 58.4153 339.997 273.169 rc
newpath
204.075 110.806 m
212.852 106.619 l
220.689 103.209 l
229.699 99.6720 l
238.945 96.4646 l
248.282 93.6633 l
257.022 91.4466 l
266.114 89.5673 l
275.513 88.0986 l
284.826 87.1423 l
294.289 86.7117 l
302.476 86.8125 l
311.471 87.4756 l
320.209 88.7338 l
328.294 90.5075 l
335.306 92.5898 l
343.185 95.6360 l
349.431 98.6843 l
356.160 102.743 l
361.604 106.769 l
366.995 111.619 l
371.543 116.619 l
375.665 122.190 l
378.881 127.586 l
381.740 133.660 l
384.042 140.201 l
385.503 146.046 l
386.526 152.477 l
386.997 159.206 l
386.906 165.834 l
386.323 172.253 l
385.136 179.351 l
383.615 185.672 l
381.549 192.333 l
379.312 198.270 l
376.499 204.633 l
373.532 210.481 l
370.129 216.437 l
366.531 222.093 l
362.508 227.828 l
358.414 233.166 l
354.029 238.432 l
349.507 243.457 l
345.221 247.903 l
340.176 252.794 l
335.562 256.986 l
330.554 261.269 l
325.691 265.190 l
320.229 269.344 l
315.460 272.776 l
310.014 276.491 l
305.032 279.715 l
299.575 283.070 l
294.866 285.826 l
289.514 288.814 l
284.361 291.553 l
279.235 294.152 l
274.158 296.609 l
269.314 298.851 l
264.118 301.148 l
259.210 303.221 l
254.096 305.286 l
249.513 307.055 l
244.505 308.905 l
239.765 310.578 l
235.094 312.155 l
230.279 313.708 l
225.904 315.057 l
221.482 316.361 l
216.672 317.713 l
212.383 318.862 l
208.061 319.966 l
203.734 321.018 l
199.817 321.925 l
195.707 322.831 l
191.693 323.669 l
187.472 324.503 l
183.809 325.186 l
179.655 325.915 l
175.972 326.521 l
172.390 327.073 l
168.605 327.617 l
164.876 328.112 l
161.542 328.519 l
158.065 328.908 l
154.734 329.246 l
151.191 329.567 l
148.181 329.808 l
144.789 330.043 l
141.663 330.224 l
138.625 330.367 l
135.642 330.474 l
132.659 330.546 l
129.561 330.584 l
126.778 330.584 l
124.083 330.551 l
121.261 330.481 l
118.504 330.375 l
116.079 330.250 l
113.266 330.065 l
110.962 329.880 l
108.323 329.629 l
105.861 329.354 l
103.709 329.080 l
101.339 328.739 l
99.0091 328.361 l
96.7431 327.951 l
94.6895 327.539 l
92.6108 327.081 l
90.5116 326.573 l
88.4699 326.031 l
86.4223 325.438 l
84.6626 324.884 l
82.7306 324.224 l
80.8425 323.524 l
79.0720 322.812 l
77.5058 322.134 l
75.6949 321.287 l
74.2045 320.535 l
72.5212 319.619 l
71.0764 318.770 l
69.5403 317.798 l
68.1255 316.830 l
66.6992 315.777 l
65.4348 314.769 l
64.1199 313.637 l
62.8084 312.410 l
61.7122 311.300 l
60.5765 310.054 l
59.4564 308.716 l
58.4137 307.353 l
57.4558 305.984 l
56.4519 304.404 l
55.6047 302.927 l
54.7585 301.291 l
54.0452 299.752 l
53.3249 298.006 l
52.7056 296.303 l
52.1205 294.456 l
51.6118 292.583 l
51.1488 290.547 l
50.7723 288.513 l
50.4604 286.356 l
50.2270 284.135 l
50.0816 282.022 l
50.0000 279.511 l
50.0069 277.181 l
50.1014 274.608 l
50.2797 272.055 l
50.5833 269.114 l
50.9403 266.474 l
51.4568 263.368 l
52.0358 260.434 l
52.7938 257.107 l
53.5580 254.134 l
54.5593 250.630 l
55.6662 247.122 l
56.9173 243.492 l
58.3160 239.748 l
59.8110 236.029 l
61.6034 231.869 l
63.4919 227.768 l
65.6808 223.305 l
67.8505 219.133 l
70.4687 214.374 l
73.2057 209.668 l
76.1724 204.830 l
79.5376 199.622 l
82.8914 194.688 l
86.5923 189.500 l
91.0083 183.616 l
95.3207 178.152 l
100.055 172.438 l
105.222 166.503 l
110.298 160.947 l
116.068 154.930 l
122.174 148.877 l
129.138 142.332 l
135.665 136.515 l
143.653 129.783 l
151.288 123.716 l
159.245 117.751 l
168.249 111.415 l
177.751 105.177 l
186.792 99.6506 l
196.792 93.9821 l
206.928 88.6968 l
218.306 83.3004 l
228.450 78.9599 l
240.398 74.4100 l
251.872 70.6140 l
263.410 67.3683 l
275.071 64.6825 l
287.013 62.5717 l
299.639 61.0767 l
311.104 60.4154 l
322.239 60.4558 l
333.855 61.2814 l
345.058 62.9218 l
355.185 65.2151 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
0 0 0 RG
q
1.00000 w
newpath
48.0000 332.584 m
386.997 332.584 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
211 355 15 15 rc
newpath
218.375 364.500 m
217.593 362.750 l
217.281 362.109 l
217.166 361.859 217.072 361.703 217.000 361.640  c
216.927 361.578 216.786 361.541 216.578 361.531  c
216.203 361.500 l
216.078 361.500 l
216.156 361.109 l
218.218 361.109 l
219.468 363.812 l
219.765 363.578 l
220.588 362.911 221.000 362.354 221.000 361.906  c
221.000 361.677 220.906 361.411 220.718 361.109  c
221.968 361.109 l
222.020 361.255 222.046 361.385 222.046 361.500  c
222.046 361.864 221.916 362.195 221.656 362.492  c
221.395 362.789 220.822 363.270 219.937 363.937  c
219.625 364.171 l
220.671 366.359 l
221.062 367.062 l
221.218 367.385 221.432 367.557 221.703 367.578  c
222.109 367.593 l
222.218 367.609 l
222.140 368.000 l
220.062 368.000 l
218.578 364.859 l
218.031 365.343 l
217.166 366.125 216.734 366.796 216.734 367.359  c
216.734 367.578 216.807 367.791 216.953 368.000  c
215.609 368.000 l
215.588 367.885 215.578 367.796 215.578 367.734  c
215.578 367.192 215.974 366.572 216.765 365.875  c
217.750 365.046 l
218.375 364.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
101.308 332.584 m
101.308 336.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
107.281 345.062 m
107.281 354.109 l
107.328 354.828 l
107.349 355.119 107.434 355.309 107.585 355.398  c
107.737 355.487 108.046 355.531 108.515 355.531  c
109.375 355.546 l
109.375 356.000 l
103.765 356.000 l
103.765 355.546 l
104.625 355.531 l
105.083 355.531 105.388 355.487 105.539 355.398  c
105.690 355.309 105.776 355.119 105.796 354.828  c
105.843 354.109 l
105.843 347.375 l
105.796 346.640 l
105.796 346.296 105.697 346.125 105.500 346.125  c
105.354 346.125 105.015 346.171 104.484 346.265  c
103.765 346.390 l
103.765 345.937 l
107.281 345.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
152.691 332.584 m
152.691 336.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
151.281 345.062 m
151.281 354.109 l
151.328 354.828 l
151.349 355.119 151.434 355.309 151.585 355.398  c
151.737 355.487 152.046 355.531 152.515 355.531  c
153.375 355.546 l
153.375 356.000 l
147.765 356.000 l
147.765 355.546 l
148.625 355.531 l
149.083 355.531 149.388 355.487 149.539 355.398  c
149.690 355.309 149.776 355.119 149.796 354.828  c
149.843 354.109 l
149.843 347.375 l
149.796 346.640 l
149.796 346.296 149.697 346.125 149.500 346.125  c
149.354 346.125 149.015 346.171 148.484 346.265  c
147.765 346.390 l
147.765 345.937 l
151.281 345.062 l
h
156.078 356.000 m
156.078 354.187 l
157.890 354.187 l
157.890 356.000 l
156.078 356.000 l
h
160.718 356.015 m
160.718 354.187 l
161.437 354.187 l
161.453 354.359 l
161.468 354.921 l
161.500 355.515 161.968 355.812 162.875 355.812  c
163.552 355.812 164.088 355.549 164.484 355.023  c
164.880 354.497 165.078 353.781 165.078 352.875  c
165.078 351.843 164.770 351.106 164.156 350.664  c
163.541 350.221 162.541 350.000 161.156 350.000  c
160.890 350.000 l
160.890 345.156 l
166.359 345.156 l
166.359 346.421 l
161.343 346.421 l
161.343 349.453 l
162.015 349.453 l
165.067 349.453 166.593 350.614 166.593 352.937  c
166.593 353.979 166.242 354.794 165.539 355.382  c
164.835 355.971 163.864 356.265 162.625 356.265  c
162.010 356.265 161.375 356.182 160.718 356.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
204.075 332.584 m
204.075 336.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
206.171 356.000 m
206.171 355.281 l
206.588 354.062 207.239 353.041 208.125 352.218  c
208.906 351.500 l
209.802 350.656 210.398 349.987 210.695 349.492  c
210.992 348.997 211.140 348.432 211.140 347.796  c
211.140 347.057 210.958 346.463 210.593 346.015  c
210.229 345.567 209.750 345.343 209.156 345.343  c
208.489 345.343 207.927 345.526 207.468 345.890  c
207.302 346.026 207.192 346.510 207.140 347.343  c
207.140 347.515 l
206.406 347.515 l
206.406 345.546 l
207.458 345.099 208.432 344.875 209.328 344.875  c
210.307 344.875 211.109 345.151 211.734 345.703  c
212.359 346.255 212.671 346.953 212.671 347.796  c
212.671 348.942 211.963 350.000 210.546 350.968  c
209.671 351.578 l
208.265 352.546 207.494 353.599 207.359 354.734  c
212.625 354.734 l
212.625 356.000 l
206.171 356.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
255.458 332.584 m
255.458 336.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
250.171 356.000 m
250.171 355.281 l
250.588 354.062 251.239 353.041 252.125 352.218  c
252.906 351.500 l
253.802 350.656 254.398 349.987 254.695 349.492  c
254.992 348.997 255.140 348.432 255.140 347.796  c
255.140 347.057 254.958 346.463 254.593 346.015  c
254.229 345.567 253.750 345.343 253.156 345.343  c
252.489 345.343 251.927 345.526 251.468 345.890  c
251.302 346.026 251.192 346.510 251.140 347.343  c
251.140 347.515 l
250.406 347.515 l
250.406 345.546 l
251.458 345.099 252.432 344.875 253.328 344.875  c
254.307 344.875 255.109 345.151 255.734 345.703  c
256.359 346.255 256.671 346.953 256.671 347.796  c
256.671 348.942 255.963 350.000 254.546 350.968  c
253.671 351.578 l
252.265 352.546 251.494 353.599 251.359 354.734  c
256.625 354.734 l
256.625 356.000 l
250.171 356.000 l
h
259.078 356.000 m
259.078 354.187 l
260.890 354.187 l
260.890 356.000 l
259.078 356.000 l
h
263.718 356.015 m
263.718 354.187 l
264.437 354.187 l
264.453 354.359 l
264.468 354.921 l
264.500 355.515 264.968 355.812 265.875 355.812  c
266.552 355.812 267.088 355.549 267.484 355.023  c
267.880 354.497 268.078 353.781 268.078 352.875  c
268.078 351.843 267.770 351.106 267.156 350.664  c
266.541 350.221 265.541 350.000 264.156 350.000  c
263.890 350.000 l
263.890 345.156 l
269.359 345.156 l
269.359 346.421 l
264.343 346.421 l
264.343 349.453 l
265.015 349.453 l
268.067 349.453 269.593 350.614 269.593 352.937  c
269.593 353.979 269.242 354.794 268.539 355.382  c
267.835 355.971 266.864 356.265 265.625 356.265  c
265.010 356.265 264.375 356.182 263.718 356.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
306.842 332.584 m
306.842 336.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
308.359 355.921 m
308.359 354.015 l
309.078 354.015 l
309.093 354.171 l
309.109 354.687 l
309.109 355.000 309.294 355.268 309.664 355.492  c
310.033 355.716 310.484 355.828 311.015 355.828  c
311.651 355.828 312.164 355.575 312.554 355.070  c
312.945 354.565 313.140 353.895 313.140 353.062  c
313.140 352.239 312.885 351.596 312.375 351.132  c
311.864 350.669 311.156 350.437 310.250 350.437  c
309.343 350.437 l
309.343 350.000 l
309.828 350.000 l
311.880 350.000 312.906 349.177 312.906 347.531  c
312.906 346.062 312.260 345.328 310.968 345.328  c
310.406 345.328 309.911 345.447 309.484 345.687  c
309.328 345.781 309.224 346.171 309.171 346.859  c
309.156 346.968 l
308.437 346.968 l
308.437 345.312 l
309.218 345.020 310.104 344.875 311.093 344.875  c
312.093 344.875 312.885 345.099 313.468 345.546  c
314.052 345.994 314.343 346.604 314.343 347.375  c
314.343 348.666 313.583 349.588 312.062 350.140  c
312.989 350.380 313.653 350.721 314.054 351.164  c
314.455 351.606 314.656 352.224 314.656 353.015  c
314.656 354.015 314.333 354.807 313.687 355.390  c
313.041 355.974 312.161 356.265 311.046 356.265  c
310.015 356.265 309.119 356.151 308.359 355.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
358.225 332.584 m
358.225 336.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
353.359 355.921 m
353.359 354.015 l
354.078 354.015 l
354.093 354.171 l
354.109 354.687 l
354.109 355.000 354.294 355.268 354.664 355.492  c
355.033 355.716 355.484 355.828 356.015 355.828  c
356.651 355.828 357.164 355.575 357.554 355.070  c
357.945 354.565 358.140 353.895 358.140 353.062  c
358.140 352.239 357.885 351.596 357.375 351.132  c
356.864 350.669 356.156 350.437 355.250 350.437  c
354.343 350.437 l
354.343 350.000 l
354.828 350.000 l
356.880 350.000 357.906 349.177 357.906 347.531  c
357.906 346.062 357.260 345.328 355.968 345.328  c
355.406 345.328 354.911 345.447 354.484 345.687  c
354.328 345.781 354.224 346.171 354.171 346.859  c
354.156 346.968 l
353.437 346.968 l
353.437 345.312 l
354.218 345.020 355.104 344.875 356.093 344.875  c
357.093 344.875 357.885 345.099 358.468 345.546  c
359.052 345.994 359.343 346.604 359.343 347.375  c
359.343 348.666 358.583 349.588 357.062 350.140  c
357.989 350.380 358.653 350.721 359.054 351.164  c
359.455 351.606 359.656 352.224 359.656 353.015  c
359.656 354.015 359.333 354.807 358.687 355.390  c
358.041 355.974 357.161 356.265 356.046 356.265  c
355.015 356.265 354.119 356.151 353.359 355.921  c
h
362.078 356.000 m
362.078 354.187 l
363.890 354.187 l
363.890 356.000 l
362.078 356.000 l
h
366.718 356.015 m
366.718 354.187 l
367.437 354.187 l
367.453 354.359 l
367.468 354.921 l
367.500 355.515 367.968 355.812 368.875 355.812  c
369.552 355.812 370.088 355.549 370.484 355.023  c
370.880 354.497 371.078 353.781 371.078 352.875  c
371.078 351.843 370.770 351.106 370.156 350.664  c
369.541 350.221 368.541 350.000 367.156 350.000  c
366.890 350.000 l
366.890 345.156 l
372.359 345.156 l
372.359 346.421 l
367.343 346.421 l
367.343 349.453 l
368.015 349.453 l
371.067 349.453 372.593 350.614 372.593 352.937  c
372.593 353.979 372.242 354.794 371.539 355.382  c
370.835 355.971 369.864 356.265 368.625 356.265  c
368.010 356.265 367.375 356.182 366.718 356.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
60.2014 332.584 m
60.2014 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
70.4781 332.584 m
70.4781 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
80.7548 332.584 m
80.7548 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
91.0315 332.584 m
91.0315 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
111.585 332.584 m
111.585 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
121.861 332.584 m
121.861 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
132.138 332.584 m
132.138 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
142.415 332.584 m
142.415 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
162.968 332.584 m
162.968 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
173.245 332.584 m
173.245 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
183.521 332.584 m
183.521 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
193.798 332.584 m
193.798 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
214.352 332.584 m
214.352 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
224.628 332.584 m
224.628 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
234.905 332.584 m
234.905 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
245.182 332.584 m
245.182 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
265.735 332.584 m
265.735 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
276.012 332.584 m
276.012 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
286.288 332.584 m
286.288 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
296.565 332.584 m
296.565 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
317.119 332.584 m
317.119 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
327.395 332.584 m
327.395 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
337.672 332.584 m
337.672 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
347.949 332.584 m
347.949 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
368.502 332.584 m
368.502 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
378.779 332.584 m
378.779 334.584 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
48.0000 332.584 m
48.0000 60.4154 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 188 16 15 rc
newpath
4.96875 203.500 m
5.75000 202.958 6.72395 202.145 7.89062 201.062  c
8.14062 200.843 l
8.08854 199.854 7.96354 198.815 7.76562 197.726  c
7.56770 196.638 7.35937 195.849 7.14062 195.359  c
6.95312 194.963 6.80468 194.729 6.69531 194.656  c
6.58593 194.583 6.29166 194.531 5.81250 194.500  c
5.65625 194.500 l
5.73437 194.109 l
8.04687 194.109 l
8.70312 195.661 9.07812 197.484 9.17187 199.578  c
9.95312 198.562 l
10.7239 197.583 11.2369 196.867 11.4921 196.414  c
11.7474 195.960 11.8750 195.541 11.8750 195.156  c
11.8750 194.760 11.7083 194.411 11.3750 194.109  c
12.9531 194.109 l
13.0468 194.296 13.0937 194.474 13.0937 194.640  c
13.0937 195.005 12.9739 195.382 12.7343 195.773  c
12.4947 196.164 12.0052 196.807 11.2656 197.703  c
8.85937 200.593 l
7.90104 201.739 7.18229 202.708 6.70312 203.500  c
4.96875 203.500 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
48.0000 316.190 m
44.0000 316.190 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
44.2812 316.062 m
44.2812 325.109 l
44.3281 325.828 l
44.3489 326.119 44.4349 326.309 44.5859 326.398  c
44.7369 326.487 45.0468 326.531 45.5156 326.531  c
46.3750 326.546 l
46.3750 327.000 l
40.7656 327.000 l
40.7656 326.546 l
41.6250 326.531 l
42.0833 326.531 42.3880 326.487 42.5390 326.398  c
42.6901 326.309 42.7760 326.119 42.7968 325.828  c
42.8437 325.109 l
42.8437 318.375 l
42.7968 317.640 l
42.7968 317.296 42.6979 317.125 42.5000 317.125  c
42.3541 317.125 42.0156 317.171 41.4843 317.265  c
40.7656 317.390 l
40.7656 316.937 l
44.2812 316.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 264.844 m
44.0000 264.844 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.2812 264.062 m
31.2812 273.109 l
31.3281 273.828 l
31.3489 274.119 31.4349 274.309 31.5859 274.398  c
31.7369 274.487 32.0468 274.531 32.5156 274.531  c
33.3750 274.546 l
33.3750 275.000 l
27.7656 275.000 l
27.7656 274.546 l
28.6250 274.531 l
29.0833 274.531 29.3880 274.487 29.5390 274.398  c
29.6901 274.309 29.7760 274.119 29.7968 273.828  c
29.8437 273.109 l
29.8437 266.375 l
29.7968 265.640 l
29.7968 265.296 29.6979 265.125 29.5000 265.125  c
29.3541 265.125 29.0156 265.171 28.4843 265.265  c
27.7656 265.390 l
27.7656 264.937 l
31.2812 264.062 l
h
36.0781 275.000 m
36.0781 273.187 l
37.8906 273.187 l
37.8906 275.000 l
36.0781 275.000 l
h
40.7187 275.015 m
40.7187 273.187 l
41.4375 273.187 l
41.4531 273.359 l
41.4687 273.921 l
41.5000 274.515 41.9687 274.812 42.8750 274.812  c
43.5520 274.812 44.0885 274.549 44.4843 274.023  c
44.8802 273.497 45.0781 272.781 45.0781 271.875  c
45.0781 270.843 44.7708 270.106 44.1562 269.664  c
43.5416 269.221 42.5416 269.000 41.1562 269.000  c
40.8906 269.000 l
40.8906 264.156 l
46.3593 264.156 l
46.3593 265.421 l
41.3437 265.421 l
41.3437 268.453 l
42.0156 268.453 l
45.0677 268.453 46.5937 269.614 46.5937 271.937  c
46.5937 272.979 46.2421 273.794 45.5390 274.382  c
44.8359 274.971 43.8645 275.265 42.6250 275.265  c
42.0104 275.265 41.3750 275.182 40.7187 275.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 213.498 m
44.0000 213.498 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
40.1718 224.000 m
40.1718 223.281 l
40.5885 222.062 41.2395 221.041 42.1250 220.218  c
42.9062 219.500 l
43.8020 218.656 44.3984 217.987 44.6953 217.492  c
44.9921 216.997 45.1406 216.432 45.1406 215.796  c
45.1406 215.057 44.9583 214.463 44.5937 214.015  c
44.2291 213.567 43.7500 213.343 43.1562 213.343  c
42.4895 213.343 41.9270 213.526 41.4687 213.890  c
41.3020 214.026 41.1927 214.510 41.1406 215.343  c
41.1406 215.515 l
40.4062 215.515 l
40.4062 213.546 l
41.4583 213.099 42.4322 212.875 43.3281 212.875  c
44.3072 212.875 45.1093 213.151 45.7343 213.703  c
46.3593 214.255 46.6718 214.953 46.6718 215.796  c
46.6718 216.942 45.9635 218.000 44.5468 218.968  c
43.6718 219.578 l
42.2656 220.546 41.4947 221.599 41.3593 222.734  c
46.6250 222.734 l
46.6250 224.000 l
40.1718 224.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 162.152 m
44.0000 162.152 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.1718 173.000 m
27.1718 172.281 l
27.5885 171.062 28.2395 170.041 29.1250 169.218  c
29.9062 168.500 l
30.8020 167.656 31.3984 166.987 31.6953 166.492  c
31.9921 165.997 32.1406 165.432 32.1406 164.796  c
32.1406 164.057 31.9583 163.463 31.5937 163.015  c
31.2291 162.567 30.7500 162.343 30.1562 162.343  c
29.4895 162.343 28.9270 162.526 28.4687 162.890  c
28.3020 163.026 28.1927 163.510 28.1406 164.343  c
28.1406 164.515 l
27.4062 164.515 l
27.4062 162.546 l
28.4583 162.099 29.4322 161.875 30.3281 161.875  c
31.3072 161.875 32.1093 162.151 32.7343 162.703  c
33.3593 163.255 33.6718 163.953 33.6718 164.796  c
33.6718 165.942 32.9635 167.000 31.5468 167.968  c
30.6718 168.578 l
29.2656 169.546 28.4947 170.599 28.3593 171.734  c
33.6250 171.734 l
33.6250 173.000 l
27.1718 173.000 l
h
36.0781 173.000 m
36.0781 171.187 l
37.8906 171.187 l
37.8906 173.000 l
36.0781 173.000 l
h
40.7187 173.015 m
40.7187 171.187 l
41.4375 171.187 l
41.4531 171.359 l
41.4687 171.921 l
41.5000 172.515 41.9687 172.812 42.8750 172.812  c
43.5520 172.812 44.0885 172.549 44.4843 172.023  c
44.8802 171.497 45.0781 170.781 45.0781 169.875  c
45.0781 168.843 44.7708 168.106 44.1562 167.664  c
43.5416 167.221 42.5416 167.000 41.1562 167.000  c
40.8906 167.000 l
40.8906 162.156 l
46.3593 162.156 l
46.3593 163.421 l
41.3437 163.421 l
41.3437 166.453 l
42.0156 166.453 l
45.0677 166.453 46.5937 167.614 46.5937 169.937  c
46.5937 170.979 46.2421 171.794 45.5390 172.382  c
44.8359 172.971 43.8645 173.265 42.6250 173.265  c
42.0104 173.265 41.3750 173.182 40.7187 173.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 110.806 m
44.0000 110.806 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
40.3593 120.921 m
40.3593 119.015 l
41.0781 119.015 l
41.0937 119.171 l
41.1093 119.687 l
41.1093 120.000 41.2942 120.268 41.6640 120.492  c
42.0338 120.716 42.4843 120.828 43.0156 120.828  c
43.6510 120.828 44.1640 120.575 44.5546 120.070  c
44.9453 119.565 45.1406 118.895 45.1406 118.062  c
45.1406 117.239 44.8854 116.596 44.3750 116.132  c
43.8645 115.669 43.1562 115.437 42.2500 115.437  c
41.3437 115.437 l
41.3437 115.000 l
41.8281 115.000 l
43.8802 115.000 44.9062 114.177 44.9062 112.531  c
44.9062 111.062 44.2604 110.328 42.9687 110.328  c
42.4062 110.328 41.9114 110.447 41.4843 110.687  c
41.3281 110.781 41.2239 111.171 41.1718 111.859  c
41.1562 111.968 l
40.4375 111.968 l
40.4375 110.312 l
41.2187 110.020 42.1041 109.875 43.0937 109.875  c
44.0937 109.875 44.8854 110.099 45.4687 110.546  c
46.0520 110.994 46.3437 111.604 46.3437 112.375  c
46.3437 113.666 45.5833 114.588 44.0625 115.140  c
44.9895 115.380 45.6536 115.721 46.0546 116.164  c
46.4557 116.606 46.6562 117.224 46.6562 118.015  c
46.6562 119.015 46.3333 119.807 45.6875 120.390  c
45.0416 120.974 44.1614 121.265 43.0468 121.265  c
42.0156 121.265 41.1197 121.151 40.3593 120.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 326.459 m
46.0000 326.459 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 305.921 m
46.0000 305.921 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 295.652 m
46.0000 295.652 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 285.382 m
46.0000 285.382 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 275.113 m
46.0000 275.113 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 254.575 m
46.0000 254.575 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 244.306 m
46.0000 244.306 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 234.036 m
46.0000 234.036 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 223.767 m
46.0000 223.767 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 203.229 m
46.0000 203.229 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 192.960 m
46.0000 192.960 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 182.691 m
46.0000 182.691 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 172.421 m
46.0000 172.421 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 151.883 m
46.0000 151.883 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 141.614 m
46.0000 141.614 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 131.345 m
46.0000 131.345 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 121.075 m
46.0000 121.075 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 100.537 m
46.0000 100.537 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 90.2683 m
46.0000 90.2683 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 79.9991 m
46.0000 79.9991 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
48.0000 69.7299 m
46.0000 69.7299 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
0 0 0 RG
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
