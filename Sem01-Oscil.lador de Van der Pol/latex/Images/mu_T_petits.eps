%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2022 3:50:08 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
0 0.501961 0 RG
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
0 0 0 RG
1.00000 w
q
Q
1.50000 w
1.00000 w
q
Q
1.50000 w
0 0.501961 0 RG
q
q
52.0000 1.00288 329.984 347.997 rc
newpath
53.0000 348.000 m
56.3028 347.682 l
59.6057 347.154 l
62.9086 346.418 l
66.2114 345.476 l
69.5143 344.332 l
72.8172 342.990 l
76.1201 341.458 l
79.4229 339.743 l
82.7258 337.854 l
86.0287 335.800 l
89.3316 333.594 l
92.6344 331.246 l
95.9373 328.768 l
99.2402 326.173 l
102.543 323.470 l
105.846 320.671 l
109.148 317.785 l
112.451 314.820 l
115.754 311.783 l
119.057 308.683 l
122.360 305.523 l
125.663 302.310 l
128.966 299.048 l
132.269 295.740 l
135.571 292.390 l
138.874 289.002 l
142.177 285.577 l
145.480 282.119 l
148.783 278.630 l
152.086 275.111 l
155.389 271.564 l
158.691 267.992 l
161.994 264.395 l
165.297 260.775 l
168.600 257.133 l
171.903 253.470 l
175.206 249.788 l
178.509 246.087 l
181.812 242.369 l
185.114 238.633 l
188.417 234.882 l
191.720 231.116 l
195.023 227.334 l
198.326 223.539 l
201.629 219.731 l
204.932 215.909 l
208.235 212.076 l
211.537 208.231 l
214.840 204.374 l
218.143 200.507 l
221.446 196.629 l
224.749 192.741 l
228.052 188.844 l
231.355 184.937 l
234.658 181.021 l
237.960 177.097 l
241.263 173.164 l
244.566 169.224 l
247.869 165.275 l
251.172 161.319 l
254.475 157.356 l
257.778 153.386 l
261.081 149.409 l
264.383 145.425 l
267.686 141.435 l
270.989 137.439 l
274.292 133.437 l
277.595 129.429 l
280.898 125.415 l
284.201 121.396 l
287.504 117.371 l
290.806 113.342 l
294.109 109.307 l
297.412 105.267 l
300.715 101.223 l
304.018 97.1745 l
307.321 93.1209 l
310.624 89.0630 l
313.926 85.0008 l
317.229 80.9345 l
320.532 76.8641 l
323.835 72.7897 l
327.138 68.7115 l
330.441 64.6295 l
333.744 60.5438 l
337.047 56.4545 l
340.349 52.3618 l
343.652 48.2656 l
346.955 44.1661 l
350.258 40.0633 l
353.561 35.9573 l
356.864 31.8482 l
360.167 27.7360 l
363.470 23.6209 l
366.772 19.5029 l
370.075 15.3820 l
373.378 11.2583 l
376.681 7.13195 l
379.984 3.00286 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
0 0 0 RG
q
1.00000 w
newpath
51.0000 350.000 m
379.984 350.000 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
209 372 15 17 rc
newpath
220.359 384.687 m
220.328 384.968 220.255 385.205 220.140 385.398  c
220.026 385.591 219.893 385.747 219.742 385.867  c
219.591 385.987 219.432 386.075 219.265 386.132  c
219.099 386.190 218.942 386.218 218.796 386.218  c
218.567 386.218 218.362 386.164 218.179 386.054  c
217.997 385.945 217.859 385.786 217.765 385.578  c
217.724 385.494 217.695 385.401 217.679 385.296  c
217.664 385.192 217.640 385.078 217.609 384.953  c
217.546 385.046 217.497 385.117 217.460 385.164  c
217.424 385.210 217.364 385.276 217.281 385.359  c
217.000 385.640 216.721 385.854 216.445 386.000  c
216.169 386.145 215.859 386.218 215.515 386.218  c
215.265 386.218 215.052 386.164 214.875 386.054  c
214.697 385.945 214.494 385.791 214.265 385.593  c
214.265 385.875 l
214.265 386.072 214.286 386.255 214.328 386.421  c
214.369 386.588 214.416 386.752 214.468 386.914  c
214.520 387.075 214.567 387.239 214.609 387.406  c
214.651 387.572 214.671 387.760 214.671 387.968  c
214.671 388.239 214.614 388.463 214.500 388.640  c
214.385 388.817 214.234 388.906 214.046 388.906  c
213.901 388.906 213.760 388.828 213.625 388.671  c
213.489 388.515 213.421 388.286 213.421 387.984  c
213.421 387.786 213.442 387.606 213.484 387.445  c
213.526 387.283 213.567 387.127 213.609 386.976  c
213.651 386.825 213.692 386.666 213.734 386.500  c
213.776 386.333 213.796 386.135 213.796 385.906  c
213.796 379.500 l
214.906 379.500 l
214.906 383.875 l
214.906 384.375 215.036 384.755 215.296 385.015  c
215.411 385.130 215.546 385.213 215.703 385.265  c
215.859 385.317 216.010 385.343 216.156 385.343  c
216.281 385.343 216.414 385.315 216.554 385.257  c
216.695 385.200 216.835 385.125 216.976 385.031  c
217.117 384.937 217.242 384.830 217.351 384.710  c
217.460 384.591 217.546 384.468 217.609 384.343  c
217.609 379.500 l
218.718 379.500 l
218.718 384.484 l
218.718 384.796 218.781 385.057 218.906 385.265  c
219.031 385.474 219.203 385.578 219.421 385.578  c
219.661 385.578 219.843 385.453 219.968 385.203  c
220.000 385.140 220.026 385.062 220.046 384.968  c
220.067 384.875 220.083 384.781 220.093 384.687  c
220.359 384.687 l
220.359 384.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
82.7258 350.000 m
82.7258 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
88.2812 363.062 m
88.2812 372.109 l
88.3281 372.828 l
88.3489 373.119 88.4349 373.309 88.5859 373.398  c
88.7369 373.487 89.0468 373.531 89.5156 373.531  c
90.3750 373.546 l
90.3750 374.000 l
84.7656 374.000 l
84.7656 373.546 l
85.6250 373.531 l
86.0833 373.531 86.3880 373.487 86.5390 373.398  c
86.6901 373.309 86.7760 373.119 86.7968 372.828  c
86.8437 372.109 l
86.8437 365.375 l
86.7968 364.640 l
86.7968 364.296 86.6979 364.125 86.5000 364.125  c
86.3541 364.125 86.0156 364.171 85.4843 364.265  c
84.7656 364.390 l
84.7656 363.937 l
88.2812 363.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
115.754 350.000 m
115.754 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
117.171 374.000 m
117.171 373.281 l
117.588 372.062 118.239 371.041 119.125 370.218  c
119.906 369.500 l
120.802 368.656 121.398 367.987 121.695 367.492  c
121.992 366.997 122.140 366.432 122.140 365.796  c
122.140 365.057 121.958 364.463 121.593 364.015  c
121.229 363.567 120.750 363.343 120.156 363.343  c
119.489 363.343 118.927 363.526 118.468 363.890  c
118.302 364.026 118.192 364.510 118.140 365.343  c
118.140 365.515 l
117.406 365.515 l
117.406 363.546 l
118.458 363.099 119.432 362.875 120.328 362.875  c
121.307 362.875 122.109 363.151 122.734 363.703  c
123.359 364.255 123.671 364.953 123.671 365.796  c
123.671 366.942 122.963 368.000 121.546 368.968  c
120.671 369.578 l
119.265 370.546 118.494 371.599 118.359 372.734  c
123.625 372.734 l
123.625 374.000 l
117.171 374.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
148.783 350.000 m
148.783 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
150.359 373.921 m
150.359 372.015 l
151.078 372.015 l
151.093 372.171 l
151.109 372.687 l
151.109 373.000 151.294 373.268 151.664 373.492  c
152.033 373.716 152.484 373.828 153.015 373.828  c
153.651 373.828 154.164 373.575 154.554 373.070  c
154.945 372.565 155.140 371.895 155.140 371.062  c
155.140 370.239 154.885 369.596 154.375 369.132  c
153.864 368.669 153.156 368.437 152.250 368.437  c
151.343 368.437 l
151.343 368.000 l
151.828 368.000 l
153.880 368.000 154.906 367.177 154.906 365.531  c
154.906 364.062 154.260 363.328 152.968 363.328  c
152.406 363.328 151.911 363.447 151.484 363.687  c
151.328 363.781 151.224 364.171 151.171 364.859  c
151.156 364.968 l
150.437 364.968 l
150.437 363.312 l
151.218 363.020 152.104 362.875 153.093 362.875  c
154.093 362.875 154.885 363.099 155.468 363.546  c
156.052 363.994 156.343 364.604 156.343 365.375  c
156.343 366.666 155.583 367.588 154.062 368.140  c
154.989 368.380 155.653 368.721 156.054 369.164  c
156.455 369.606 156.656 370.224 156.656 371.015  c
156.656 372.015 156.333 372.807 155.687 373.390  c
155.041 373.974 154.161 374.265 153.046 374.265  c
152.015 374.265 151.119 374.151 150.359 373.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
181.812 350.000 m
181.812 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
187.421 370.937 m
182.453 370.937 l
182.453 370.203 l
187.875 362.984 l
188.687 362.984 l
188.687 369.843 l
190.140 369.843 l
190.140 370.937 l
188.687 370.937 l
188.687 372.109 l
188.687 372.682 188.731 373.052 188.820 373.218  c
188.908 373.385 189.104 373.479 189.406 373.500  c
189.906 373.531 l
190.046 373.546 l
190.046 374.000 l
185.890 374.000 l
185.890 373.546 l
186.015 373.531 l
186.781 373.500 l
187.041 373.489 187.213 373.393 187.296 373.210  c
187.380 373.028 187.421 372.661 187.421 372.109  c
187.421 370.937 l
h
183.265 369.843 m
187.421 369.843 l
187.421 364.312 l
183.265 369.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
214.840 350.000 m
214.840 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
216.718 374.015 m
216.718 372.187 l
217.437 372.187 l
217.453 372.359 l
217.468 372.921 l
217.500 373.515 217.968 373.812 218.875 373.812  c
219.552 373.812 220.088 373.549 220.484 373.023  c
220.880 372.497 221.078 371.781 221.078 370.875  c
221.078 369.843 220.770 369.106 220.156 368.664  c
219.541 368.221 218.541 368.000 217.156 368.000  c
216.890 368.000 l
216.890 363.156 l
222.359 363.156 l
222.359 364.421 l
217.343 364.421 l
217.343 367.453 l
218.015 367.453 l
221.067 367.453 222.593 368.614 222.593 370.937  c
222.593 371.979 222.242 372.794 221.539 373.382  c
220.835 373.971 219.864 374.265 218.625 374.265  c
218.010 374.265 217.375 374.182 216.718 374.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
247.869 350.000 m
247.869 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
250.437 368.453 m
251.114 367.515 251.984 367.046 253.046 367.046  c
253.994 367.046 254.768 367.362 255.367 367.992  c
255.966 368.622 256.265 369.437 256.265 370.437  c
256.265 371.520 255.924 372.429 255.242 373.164  c
254.559 373.898 253.718 374.265 252.718 374.265  c
251.500 374.265 250.559 373.789 249.898 372.835  c
249.237 371.882 248.906 370.520 248.906 368.750  c
248.906 366.885 249.286 365.440 250.046 364.414  c
250.807 363.388 251.885 362.875 253.281 362.875  c
254.177 362.875 254.968 363.036 255.656 363.359  c
255.656 365.093 l
254.937 365.093 l
254.921 364.953 l
254.890 364.421 l
254.859 364.099 254.682 363.835 254.359 363.632  c
254.036 363.429 253.630 363.328 253.140 363.328  c
252.286 363.328 251.622 363.776 251.148 364.671  c
250.674 365.567 250.437 366.828 250.437 368.453  c
h
250.484 370.000 m
250.484 371.114 250.710 372.028 251.164 372.742  c
251.617 373.455 252.197 373.812 252.906 373.812  c
254.177 373.812 254.812 372.755 254.812 370.640  c
254.812 368.578 254.151 367.546 252.828 367.546  c
252.109 367.546 251.539 367.768 251.117 368.210  c
250.695 368.653 250.484 369.250 250.484 370.000  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
280.898 350.000 m
280.898 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
283.062 374.000 m
283.270 372.822 283.617 371.799 284.101 370.929  c
284.585 370.059 285.729 368.411 287.531 365.984  c
288.625 364.515 l
282.515 364.515 l
282.515 363.156 l
289.468 363.156 l
289.468 364.109 l
286.500 368.099 284.932 371.395 284.765 374.000  c
283.062 374.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
313.926 350.000 m
313.926 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
317.140 368.156 m
316.026 367.395 315.468 366.557 315.468 365.640  c
315.468 364.817 315.765 364.151 316.359 363.640  c
316.953 363.130 317.729 362.875 318.687 362.875  c
319.604 362.875 320.335 363.091 320.882 363.523  c
321.429 363.955 321.703 364.536 321.703 365.265  c
321.703 366.369 320.989 367.286 319.562 368.015  c
321.291 368.755 322.156 369.812 322.156 371.187  c
322.156 372.093 321.812 372.833 321.125 373.406  c
320.437 373.979 319.552 374.265 318.468 374.265  c
317.416 374.265 316.562 374.000 315.906 373.468  c
315.250 372.937 314.921 372.234 314.921 371.359  c
314.921 369.911 315.661 368.843 317.140 368.156  c
h
319.156 367.781 m
320.010 367.156 320.437 366.322 320.437 365.281  c
320.437 364.697 320.263 364.226 319.914 363.867  c
319.565 363.507 319.109 363.328 318.546 363.328  c
318.036 363.328 317.604 363.505 317.250 363.859  c
316.895 364.213 316.718 364.651 316.718 365.171  c
316.718 365.671 316.880 366.093 317.203 366.437  c
317.526 366.781 318.177 367.229 319.156 367.781  c
h
317.468 368.484 m
316.729 369.151 316.359 370.052 316.359 371.187  c
316.359 371.989 316.557 372.627 316.953 373.101  c
317.349 373.575 317.880 373.812 318.546 373.812  c
319.171 373.812 319.687 373.604 320.093 373.187  c
320.500 372.770 320.703 372.244 320.703 371.609  c
320.703 371.078 320.546 370.632 320.234 370.273  c
319.921 369.914 319.338 369.500 318.484 369.031  c
317.468 368.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
346.955 350.000 m
346.955 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
353.687 368.703 m
353.010 369.651 352.140 370.125 351.078 370.125  c
350.130 370.125 349.356 369.807 348.757 369.171  c
348.158 368.536 347.859 367.718 347.859 366.718  c
347.859 365.635 348.197 364.724 348.875 363.984  c
349.552 363.244 350.395 362.875 351.406 362.875  c
352.625 362.875 353.565 363.356 354.226 364.320  c
354.888 365.283 355.218 366.645 355.218 368.406  c
355.218 370.270 354.838 371.713 354.078 372.734  c
353.317 373.755 352.244 374.265 350.859 374.265  c
349.953 374.265 349.156 374.104 348.468 373.781  c
348.468 372.062 l
349.187 372.062 l
349.203 372.218 l
349.234 372.734 l
349.265 373.057 349.442 373.317 349.765 373.515  c
350.088 373.713 350.494 373.812 350.984 373.812  c
351.838 373.812 352.502 373.367 352.976 372.476  c
353.450 371.585 353.687 370.328 353.687 368.703  c
h
353.640 367.156 m
353.640 366.031 353.414 365.114 352.960 364.406  c
352.507 363.697 351.927 363.343 351.218 363.343  c
349.937 363.343 349.296 364.401 349.296 366.515  c
349.296 368.578 349.963 369.609 351.296 369.609  c
352.015 369.609 352.585 369.385 353.007 368.937  c
353.429 368.489 353.640 367.895 353.640 367.156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
379.984 350.000 m
379.984 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.281 363.062 m
380.281 372.109 l
380.328 372.828 l
380.349 373.119 380.434 373.309 380.585 373.398  c
380.737 373.487 381.046 373.531 381.515 373.531  c
382.375 373.546 l
382.375 374.000 l
376.765 374.000 l
376.765 373.546 l
377.625 373.531 l
378.083 373.531 378.388 373.487 378.539 373.398  c
378.690 373.309 378.776 373.119 378.796 372.828  c
378.843 372.109 l
378.843 365.375 l
378.796 364.640 l
378.796 364.296 378.697 364.125 378.500 364.125  c
378.354 364.125 378.015 364.171 377.484 364.265  c
376.765 364.390 l
376.765 363.937 l
380.281 363.062 l
h
388.500 374.265 m
387.385 374.265 386.484 373.747 385.796 372.710  c
385.109 371.674 384.765 370.307 384.765 368.609  c
384.765 366.869 385.109 365.481 385.796 364.445  c
386.484 363.408 387.406 362.890 388.562 362.890  c
389.718 362.890 390.640 363.406 391.328 364.437  c
392.015 365.468 392.359 366.854 392.359 368.593  c
392.359 370.333 392.013 371.713 391.320 372.734  c
390.627 373.755 389.687 374.265 388.500 374.265  c
h
388.531 373.812 m
390.062 373.885 390.828 372.114 390.828 368.500  c
390.828 365.052 390.072 363.328 388.562 363.328  c
387.062 363.328 386.312 365.078 386.312 368.578  c
386.312 372.005 387.052 373.750 388.531 373.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
66.2114 350.000 m
66.2114 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
99.2402 350.000 m
99.2402 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
132.269 350.000 m
132.269 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
165.297 350.000 m
165.297 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
198.326 350.000 m
198.326 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
231.355 350.000 m
231.355 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
264.383 350.000 m
264.383 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
297.412 350.000 m
297.412 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
330.441 350.000 m
330.441 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
363.470 350.000 m
363.470 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
51.0000 350.000 m
51.0000 3.00286 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 164 23 22 rc
newpath
10.4218 168.109 m
8.90625 168.109 l
8.25000 168.140 l
8.02083 168.140 7.86979 168.171 7.79687 168.234  c
7.72395 168.296 7.66666 168.432 7.62500 168.640  c
7.58333 168.869 7.54166 169.057 7.50000 169.203  c
7.46875 169.328 l
6.79687 169.328 l
7.14062 167.609 l
15.2031 167.609 l
14.8750 169.328 l
14.2031 169.328 l
14.2187 169.203 l
14.2395 169.046 14.2708 168.859 14.3125 168.640  c
14.3333 168.546 14.3437 168.453 14.3437 168.359  c
14.3437 168.213 14.1927 168.140 13.8906 168.140  c
13.2500 168.109 l
11.7343 168.109 l
10.2968 175.359 l
10.2343 175.703 10.2031 176.000 10.2031 176.250  c
10.2031 176.447 10.3645 176.552 10.6875 176.562  c
11.1093 176.593 l
11.3906 176.609 l
11.3125 177.000 l
7.31250 177.000 l
7.39062 176.609 l
7.67187 176.593 l
8.00520 176.593 8.28125 176.562 8.50000 176.500  c
8.67708 176.447 8.83333 176.067 8.96875 175.359  c
10.4218 168.109 l
h
f
newpath
19.6562 182.984 m
19.6354 183.203 19.5807 183.388 19.4921 183.539  c
19.4036 183.690 19.3020 183.812 19.1875 183.906  c
19.0729 184.000 18.9505 184.067 18.8203 184.109  c
18.6901 184.151 18.5677 184.171 18.4531 184.171  c
18.2864 184.171 18.1328 184.127 17.9921 184.039  c
17.8515 183.950 17.7447 183.833 17.6718 183.687  c
17.6406 183.614 17.6171 183.539 17.6015 183.460  c
17.5859 183.382 17.5677 183.291 17.5468 183.187  c
17.4947 183.260 17.4557 183.315 17.4296 183.351  c
17.4036 183.388 17.3593 183.442 17.2968 183.515  c
17.0781 183.724 16.8619 183.885 16.6484 184.000  c
16.4349 184.114 16.1979 184.171 15.9375 184.171  c
15.7500 184.171 15.5859 184.130 15.4453 184.046  c
15.3046 183.963 15.1458 183.843 14.9687 183.687  c
14.9687 183.906 l
14.9687 184.052 14.9843 184.190 15.0156 184.320  c
15.0468 184.450 15.0833 184.578 15.1250 184.703  c
15.1666 184.828 15.2057 184.955 15.2421 185.085  c
15.2786 185.216 15.2968 185.359 15.2968 185.515  c
15.2968 185.724 15.2500 185.895 15.1562 186.031  c
15.0625 186.166 14.9479 186.234 14.8125 186.234  c
14.6979 186.234 14.5885 186.174 14.4843 186.054  c
14.3802 185.934 14.3281 185.760 14.3281 185.531  c
14.3281 185.375 14.3437 185.237 14.3750 185.117  c
14.4062 184.997 14.4375 184.877 14.4687 184.757  c
14.5000 184.638 14.5312 184.513 14.5625 184.382  c
14.5937 184.252 14.6093 184.104 14.6093 183.937  c
14.6093 179.000 l
15.4687 179.000 l
15.4687 182.359 l
15.4687 182.744 15.5677 183.036 15.7656 183.234  c
15.8593 183.328 15.9661 183.393 16.0859 183.429  c
16.2057 183.466 16.3229 183.484 16.4375 183.484  c
16.5208 183.484 16.6197 183.463 16.7343 183.421  c
16.8489 183.380 16.9583 183.325 17.0625 183.257  c
17.1666 183.190 17.2604 183.109 17.3437 183.015  c
17.4270 182.921 17.4947 182.822 17.5468 182.718  c
17.5468 179.000 l
18.4062 179.000 l
18.4062 182.843 l
18.4062 183.072 18.4531 183.270 18.5468 183.437  c
18.6406 183.604 18.7708 183.687 18.9375 183.687  c
19.1250 183.687 19.2656 183.588 19.3593 183.390  c
19.3906 183.338 19.4114 183.276 19.4218 183.203  c
19.4322 183.130 19.4427 183.057 19.4531 182.984  c
19.6562 182.984 l
19.6562 182.984 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
51.0000 301.801 m
47.0000 301.801 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
45.1406 306.156 m
44.0260 305.395 43.4687 304.557 43.4687 303.640  c
43.4687 302.817 43.7656 302.151 44.3593 301.640  c
44.9531 301.130 45.7291 300.875 46.6875 300.875  c
47.6041 300.875 48.3359 301.091 48.8828 301.523  c
49.4296 301.955 49.7031 302.536 49.7031 303.265  c
49.7031 304.369 48.9895 305.286 47.5625 306.015  c
49.2916 306.755 50.1562 307.812 50.1562 309.187  c
50.1562 310.093 49.8125 310.833 49.1250 311.406  c
48.4375 311.979 47.5520 312.265 46.4687 312.265  c
45.4166 312.265 44.5625 312.000 43.9062 311.468  c
43.2500 310.937 42.9218 310.234 42.9218 309.359  c
42.9218 307.911 43.6614 306.843 45.1406 306.156  c
h
47.1562 305.781 m
48.0104 305.156 48.4375 304.322 48.4375 303.281  c
48.4375 302.697 48.2630 302.226 47.9140 301.867  c
47.5651 301.507 47.1093 301.328 46.5468 301.328  c
46.0364 301.328 45.6041 301.505 45.2500 301.859  c
44.8958 302.213 44.7187 302.651 44.7187 303.171  c
44.7187 303.671 44.8802 304.093 45.2031 304.437  c
45.5260 304.781 46.1770 305.229 47.1562 305.781  c
h
45.4687 306.484 m
44.7291 307.151 44.3593 308.052 44.3593 309.187  c
44.3593 309.989 44.5572 310.627 44.9531 311.101  c
45.3489 311.575 45.8802 311.812 46.5468 311.812  c
47.1718 311.812 47.6875 311.604 48.0937 311.187  c
48.5000 310.770 48.7031 310.244 48.7031 309.609  c
48.7031 309.078 48.5468 308.632 48.2343 308.273  c
47.9218 307.914 47.3385 307.500 46.4843 307.031  c
45.4687 306.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 247.858 m
47.0000 247.858 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.2812 247.062 m
38.2812 256.109 l
38.3281 256.828 l
38.3489 257.119 38.4349 257.309 38.5859 257.398  c
38.7369 257.487 39.0468 257.531 39.5156 257.531  c
40.3750 257.546 l
40.3750 258.000 l
34.7656 258.000 l
34.7656 257.546 l
35.6250 257.531 l
36.0833 257.531 36.3880 257.487 36.5390 257.398  c
36.6901 257.309 36.7760 257.119 36.7968 256.828  c
36.8437 256.109 l
36.8437 249.375 l
36.7968 248.640 l
36.7968 248.296 36.6979 248.125 36.5000 248.125  c
36.3541 248.125 36.0156 248.171 35.4843 248.265  c
34.7656 248.390 l
34.7656 247.937 l
38.2812 247.062 l
h
46.5000 258.265 m
45.3854 258.265 44.4843 257.747 43.7968 256.710  c
43.1093 255.674 42.7656 254.307 42.7656 252.609  c
42.7656 250.869 43.1093 249.481 43.7968 248.445  c
44.4843 247.408 45.4062 246.890 46.5625 246.890  c
47.7187 246.890 48.6406 247.406 49.3281 248.437  c
50.0156 249.468 50.3593 250.854 50.3593 252.593  c
50.3593 254.333 50.0130 255.713 49.3203 256.734  c
48.6276 257.755 47.6875 258.265 46.5000 258.265  c
h
46.5312 257.812 m
48.0625 257.885 48.8281 256.114 48.8281 252.500  c
48.8281 249.052 48.0729 247.328 46.5625 247.328  c
45.0625 247.328 44.3125 249.078 44.3125 252.578  c
44.3125 256.005 45.0520 257.750 46.5312 257.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 193.915 m
47.0000 193.915 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.2812 193.062 m
38.2812 202.109 l
38.3281 202.828 l
38.3489 203.119 38.4349 203.309 38.5859 203.398  c
38.7369 203.487 39.0468 203.531 39.5156 203.531  c
40.3750 203.546 l
40.3750 204.000 l
34.7656 204.000 l
34.7656 203.546 l
35.6250 203.531 l
36.0833 203.531 36.3880 203.487 36.5390 203.398  c
36.6901 203.309 36.7760 203.119 36.7968 202.828  c
36.8437 202.109 l
36.8437 195.375 l
36.7968 194.640 l
36.7968 194.296 36.6979 194.125 36.5000 194.125  c
36.3541 194.125 36.0156 194.171 35.4843 194.265  c
34.7656 194.390 l
34.7656 193.937 l
38.2812 193.062 l
h
43.1718 204.000 m
43.1718 203.281 l
43.5885 202.062 44.2395 201.041 45.1250 200.218  c
45.9062 199.500 l
46.8020 198.656 47.3984 197.987 47.6953 197.492  c
47.9921 196.997 48.1406 196.432 48.1406 195.796  c
48.1406 195.057 47.9583 194.463 47.5937 194.015  c
47.2291 193.567 46.7500 193.343 46.1562 193.343  c
45.4895 193.343 44.9270 193.526 44.4687 193.890  c
44.3020 194.026 44.1927 194.510 44.1406 195.343  c
44.1406 195.515 l
43.4062 195.515 l
43.4062 193.546 l
44.4583 193.099 45.4322 192.875 46.3281 192.875  c
47.3072 192.875 48.1093 193.151 48.7343 193.703  c
49.3593 194.255 49.6718 194.953 49.6718 195.796  c
49.6718 196.942 48.9635 198.000 47.5468 198.968  c
46.6718 199.578 l
45.2656 200.546 44.4947 201.599 44.3593 202.734  c
49.6250 202.734 l
49.6250 204.000 l
43.1718 204.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 139.973 m
47.0000 139.973 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.2812 139.062 m
38.2812 148.109 l
38.3281 148.828 l
38.3489 149.119 38.4349 149.309 38.5859 149.398  c
38.7369 149.487 39.0468 149.531 39.5156 149.531  c
40.3750 149.546 l
40.3750 150.000 l
34.7656 150.000 l
34.7656 149.546 l
35.6250 149.531 l
36.0833 149.531 36.3880 149.487 36.5390 149.398  c
36.6901 149.309 36.7760 149.119 36.7968 148.828  c
36.8437 148.109 l
36.8437 141.375 l
36.7968 140.640 l
36.7968 140.296 36.6979 140.125 36.5000 140.125  c
36.3541 140.125 36.0156 140.171 35.4843 140.265  c
34.7656 140.390 l
34.7656 139.937 l
38.2812 139.062 l
h
47.4218 146.937 m
42.4531 146.937 l
42.4531 146.203 l
47.8750 138.984 l
48.6875 138.984 l
48.6875 145.843 l
50.1406 145.843 l
50.1406 146.937 l
48.6875 146.937 l
48.6875 148.109 l
48.6875 148.682 48.7317 149.052 48.8203 149.218  c
48.9088 149.385 49.1041 149.479 49.4062 149.500  c
49.9062 149.531 l
50.0468 149.546 l
50.0468 150.000 l
45.8906 150.000 l
45.8906 149.546 l
46.0156 149.531 l
46.7812 149.500 l
47.0416 149.489 47.2135 149.393 47.2968 149.210  c
47.3802 149.028 47.4218 148.661 47.4218 148.109  c
47.4218 146.937 l
h
43.2656 145.843 m
47.4218 145.843 l
47.4218 140.312 l
43.2656 145.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 86.0305 m
47.0000 86.0305 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.2812 86.0625 m
38.2812 95.1093 l
38.3281 95.8281 l
38.3489 96.1197 38.4349 96.3099 38.5859 96.3984  c
38.7369 96.4869 39.0468 96.5312 39.5156 96.5312  c
40.3750 96.5468 l
40.3750 97.0000 l
34.7656 97.0000 l
34.7656 96.5468 l
35.6250 96.5312 l
36.0833 96.5312 36.3880 96.4869 36.5390 96.3984  c
36.6901 96.3099 36.7760 96.1197 36.7968 95.8281  c
36.8437 95.1093 l
36.8437 88.3750 l
36.7968 87.6406 l
36.7968 87.2968 36.6979 87.1250 36.5000 87.1250  c
36.3541 87.1250 36.0156 87.1718 35.4843 87.2656  c
34.7656 87.3906 l
34.7656 86.9375 l
38.2812 86.0625 l
h
44.4375 91.4531 m
45.1145 90.5156 45.9843 90.0468 47.0468 90.0468  c
47.9947 90.0468 48.7682 90.3619 49.3671 90.9921  c
49.9661 91.6224 50.2656 92.4375 50.2656 93.4375  c
50.2656 94.5208 49.9244 95.4296 49.2421 96.1640  c
48.5599 96.8984 47.7187 97.2656 46.7187 97.2656  c
45.5000 97.2656 44.5599 96.7890 43.8984 95.8359  c
43.2369 94.8828 42.9062 93.5208 42.9062 91.7500  c
42.9062 89.8854 43.2864 88.4401 44.0468 87.4140  c
44.8072 86.3880 45.8854 85.8750 47.2812 85.8750  c
48.1770 85.8750 48.9687 86.0364 49.6562 86.3593  c
49.6562 88.0937 l
48.9375 88.0937 l
48.9218 87.9531 l
48.8906 87.4218 l
48.8593 87.0989 48.6822 86.8359 48.3593 86.6328  c
48.0364 86.4296 47.6302 86.3281 47.1406 86.3281  c
46.2864 86.3281 45.6224 86.7760 45.1484 87.6718  c
44.6744 88.5677 44.4375 89.8281 44.4375 91.4531  c
h
44.4843 93.0000 m
44.4843 94.1145 44.7109 95.0286 45.1640 95.7421  c
45.6171 96.4557 46.1979 96.8125 46.9062 96.8125  c
48.1770 96.8125 48.8125 95.7552 48.8125 93.6406  c
48.8125 91.5781 48.1510 90.5468 46.8281 90.5468  c
46.1093 90.5468 45.5390 90.7682 45.1171 91.2109  c
44.6953 91.6536 44.4843 92.2500 44.4843 93.0000  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 32.0879 m
47.0000 32.0879 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
38.2812 32.0625 m
38.2812 41.1093 l
38.3281 41.8281 l
38.3489 42.1197 38.4349 42.3099 38.5859 42.3984  c
38.7369 42.4869 39.0468 42.5312 39.5156 42.5312  c
40.3750 42.5468 l
40.3750 43.0000 l
34.7656 43.0000 l
34.7656 42.5468 l
35.6250 42.5312 l
36.0833 42.5312 36.3880 42.4869 36.5390 42.3984  c
36.6901 42.3099 36.7760 42.1197 36.7968 41.8281  c
36.8437 41.1093 l
36.8437 34.3750 l
36.7968 33.6406 l
36.7968 33.2968 36.6979 33.1250 36.5000 33.1250  c
36.3541 33.1250 36.0156 33.1718 35.4843 33.2656  c
34.7656 33.3906 l
34.7656 32.9375 l
38.2812 32.0625 l
h
45.1406 37.1562 m
44.0260 36.3958 43.4687 35.5572 43.4687 34.6406  c
43.4687 33.8177 43.7656 33.1510 44.3593 32.6406  c
44.9531 32.1302 45.7291 31.8750 46.6875 31.8750  c
47.6041 31.8750 48.3359 32.0911 48.8828 32.5234  c
49.4296 32.9557 49.7031 33.5364 49.7031 34.2656  c
49.7031 35.3697 48.9895 36.2864 47.5625 37.0156  c
49.2916 37.7552 50.1562 38.8125 50.1562 40.1875  c
50.1562 41.0937 49.8125 41.8333 49.1250 42.4062  c
48.4375 42.9791 47.5520 43.2656 46.4687 43.2656  c
45.4166 43.2656 44.5625 43.0000 43.9062 42.4687  c
43.2500 41.9375 42.9218 41.2343 42.9218 40.3593  c
42.9218 38.9114 43.6614 37.8437 45.1406 37.1562  c
h
47.1562 36.7812 m
48.0104 36.1562 48.4375 35.3229 48.4375 34.2812  c
48.4375 33.6979 48.2630 33.2265 47.9140 32.8671  c
47.5651 32.5078 47.1093 32.3281 46.5468 32.3281  c
46.0364 32.3281 45.6041 32.5052 45.2500 32.8593  c
44.8958 33.2135 44.7187 33.6510 44.7187 34.1718  c
44.7187 34.6718 44.8802 35.0937 45.2031 35.4375  c
45.5260 35.7812 46.1770 36.2291 47.1562 36.7812  c
h
45.4687 37.4843 m
44.7291 38.1510 44.3593 39.0520 44.3593 40.1875  c
44.3593 40.9895 44.5572 41.6276 44.9531 42.1015  c
45.3489 42.5755 45.8802 42.8125 46.5468 42.8125  c
47.1718 42.8125 47.6875 42.6041 48.0937 42.1875  c
48.5000 41.7708 48.7031 41.2447 48.7031 40.6093  c
48.7031 40.0781 48.5468 39.6328 48.2343 39.2734  c
47.9218 38.9140 47.3385 38.5000 46.4843 38.0312  c
45.4687 37.4843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 328.772 m
49.0000 328.772 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 274.829 m
49.0000 274.829 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 220.887 m
49.0000 220.887 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 166.944 m
49.0000 166.944 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 113.001 m
49.0000 113.001 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 59.0592 m
49.0000 59.0592 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 5.11663 m
49.0000 5.11663 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
0 0 0 RG
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
