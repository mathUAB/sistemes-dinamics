%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2022 6:56:43 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
q
Q
1.50000 w
1.00000 w
q
Q
1.50000 w
q
q
1.00000 0 0 RG
52.0000 1.00289 336.997 346.997 rc
newpath
53.0000 347.000 m
61.3499 347.000 l
69.6998 347.000 l
78.0498 347.000 l
86.3997 347.000 l
94.7496 347.000 l
103.099 347.000 l
111.449 347.000 l
119.799 347.000 l
128.149 347.000 l
136.499 347.000 l
144.849 347.000 l
153.199 296.589 l
161.549 246.788 l
169.899 215.631 l
178.249 191.569 l
186.599 171.667 l
194.948 154.619 l
203.298 139.700 l
211.648 126.455 l
219.998 114.576 l
228.348 103.838 l
236.698 94.0749 l
245.048 85.1564 l
253.398 76.9794 l
261.748 69.4599 l
270.098 62.5291 l
278.448 56.1288 l
286.798 50.2093 l
295.148 44.7277 l
303.498 39.6453 l
311.848 34.9269 l
320.197 30.5388 l
328.547 26.4476 l
336.897 22.6191 l
345.247 19.0170 l
353.597 15.6024 l
361.947 12.3342 l
370.297 9.17028 l
378.647 6.07089 l
386.997 3.00289 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
q
[ 2.00000 5.00000 ] 0 d
0 0 1.00000 RG
52.0000 1.00289 336.997 346.997 rc
newpath
53.0000 347.000 m
61.3499 347.000 l
69.6998 347.000 l
78.0498 347.000 l
86.3997 347.000 l
94.7496 347.000 l
103.099 347.000 l
111.449 347.000 l
119.799 347.000 l
128.149 347.000 l
136.499 347.000 l
144.849 347.000 l
153.199 347.000 l
161.549 347.000 l
169.899 347.000 l
178.249 347.000 l
186.599 347.000 l
194.948 347.000 l
203.298 347.000 l
211.648 347.000 l
219.998 347.000 l
228.348 347.000 l
236.698 347.000 l
245.048 347.000 l
253.398 347.000 l
261.748 347.000 l
270.098 347.000 l
278.448 347.000 l
286.798 347.000 l
295.148 347.000 l
303.498 347.000 l
311.848 347.000 l
320.197 347.000 l
328.547 347.000 l
336.897 347.000 l
345.247 347.000 l
353.597 347.000 l
361.947 347.000 l
370.297 347.000 l
378.647 347.000 l
386.997 347.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
1.00000 w
newpath
51.0000 349.000 m
386.997 349.000 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
211 371 16 18 rc
newpath
221.828 385.296 m
220.765 385.890 219.724 386.187 218.703 386.187  c
217.942 386.187 217.346 385.940 216.914 385.445  c
216.481 384.950 216.265 384.276 216.265 383.421  c
216.265 381.974 216.770 380.687 217.781 379.562  c
218.791 378.437 219.947 377.875 221.250 377.875  c
221.833 377.875 222.442 377.984 223.078 378.203  c
222.671 380.218 l
221.953 380.218 l
221.968 380.078 l
221.989 379.974 222.015 379.817 222.046 379.609  c
222.067 379.505 222.078 379.416 222.078 379.343  c
222.078 378.770 221.578 378.484 220.578 378.484  c
219.786 378.484 219.125 378.927 218.593 379.812  c
218.062 380.697 217.796 381.802 217.796 383.125  c
217.796 384.614 218.416 385.359 219.656 385.359  c
220.177 385.359 220.942 385.135 221.953 384.687  c
221.828 385.296 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
94.7496 349.000 m
94.7496 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
92.5000 373.265 m
91.3854 373.265 90.4843 372.747 89.7968 371.710  c
89.1093 370.674 88.7656 369.307 88.7656 367.609  c
88.7656 365.869 89.1093 364.481 89.7968 363.445  c
90.4843 362.408 91.4062 361.890 92.5625 361.890  c
93.7187 361.890 94.6406 362.406 95.3281 363.437  c
96.0156 364.468 96.3593 365.854 96.3593 367.593  c
96.3593 369.333 96.0130 370.713 95.3203 371.734  c
94.6276 372.755 93.6875 373.265 92.5000 373.265  c
h
92.5312 372.812 m
94.0625 372.885 94.8281 371.114 94.8281 367.500  c
94.8281 364.052 94.0729 362.328 92.5625 362.328  c
91.0625 362.328 90.3125 364.078 90.3125 367.578  c
90.3125 371.005 91.0520 372.750 92.5312 372.812  c
h
98.0781 373.000 m
98.0781 371.187 l
99.8906 371.187 l
99.8906 373.000 l
98.0781 373.000 l
h
103.437 367.453 m
104.114 366.515 104.984 366.046 106.046 366.046  c
106.994 366.046 107.768 366.362 108.367 366.992  c
108.966 367.622 109.265 368.437 109.265 369.437  c
109.265 370.520 108.924 371.429 108.242 372.164  c
107.559 372.898 106.718 373.265 105.718 373.265  c
104.500 373.265 103.559 372.789 102.898 371.835  c
102.237 370.882 101.906 369.520 101.906 367.750  c
101.906 365.885 102.286 364.440 103.046 363.414  c
103.807 362.388 104.885 361.875 106.281 361.875  c
107.177 361.875 107.968 362.036 108.656 362.359  c
108.656 364.093 l
107.937 364.093 l
107.921 363.953 l
107.890 363.421 l
107.859 363.099 107.682 362.835 107.359 362.632  c
107.036 362.429 106.630 362.328 106.140 362.328  c
105.286 362.328 104.622 362.776 104.148 363.671  c
103.674 364.567 103.437 365.828 103.437 367.453  c
h
103.484 369.000 m
103.484 370.114 103.710 371.028 104.164 371.742  c
104.617 372.455 105.197 372.812 105.906 372.812  c
107.177 372.812 107.812 371.755 107.812 369.640  c
107.812 367.578 107.151 366.546 105.828 366.546  c
105.109 366.546 104.539 366.768 104.117 367.210  c
103.695 367.653 103.484 368.250 103.484 369.000  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
178.249 349.000 m
178.249 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
176.500 373.265 m
175.385 373.265 174.484 372.747 173.796 371.710  c
173.109 370.674 172.765 369.307 172.765 367.609  c
172.765 365.869 173.109 364.481 173.796 363.445  c
174.484 362.408 175.406 361.890 176.562 361.890  c
177.718 361.890 178.640 362.406 179.328 363.437  c
180.015 364.468 180.359 365.854 180.359 367.593  c
180.359 369.333 180.013 370.713 179.320 371.734  c
178.627 372.755 177.687 373.265 176.500 373.265  c
h
176.531 372.812 m
178.062 372.885 178.828 371.114 178.828 367.500  c
178.828 364.052 178.072 362.328 176.562 362.328  c
175.062 362.328 174.312 364.078 174.312 367.578  c
174.312 371.005 175.052 372.750 176.531 372.812  c
h
182.078 373.000 m
182.078 371.187 l
183.890 371.187 l
183.890 373.000 l
182.078 373.000 l
h
187.062 373.000 m
187.270 371.822 187.617 370.799 188.101 369.929  c
188.585 369.059 189.729 367.411 191.531 364.984  c
192.625 363.515 l
186.515 363.515 l
186.515 362.156 l
193.468 362.156 l
193.468 363.109 l
190.500 367.099 188.932 370.395 188.765 373.000  c
187.062 373.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
261.748 349.000 m
261.748 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
259.500 373.265 m
258.385 373.265 257.484 372.747 256.796 371.710  c
256.109 370.674 255.765 369.307 255.765 367.609  c
255.765 365.869 256.109 364.481 256.796 363.445  c
257.484 362.408 258.406 361.890 259.562 361.890  c
260.718 361.890 261.640 362.406 262.328 363.437  c
263.015 364.468 263.359 365.854 263.359 367.593  c
263.359 369.333 263.013 370.713 262.320 371.734  c
261.627 372.755 260.687 373.265 259.500 373.265  c
h
259.531 372.812 m
261.062 372.885 261.828 371.114 261.828 367.500  c
261.828 364.052 261.072 362.328 259.562 362.328  c
258.062 362.328 257.312 364.078 257.312 367.578  c
257.312 371.005 258.052 372.750 259.531 372.812  c
h
265.078 373.000 m
265.078 371.187 l
266.890 371.187 l
266.890 373.000 l
265.078 373.000 l
h
271.140 367.156 m
270.026 366.395 269.468 365.557 269.468 364.640  c
269.468 363.817 269.765 363.151 270.359 362.640  c
270.953 362.130 271.729 361.875 272.687 361.875  c
273.604 361.875 274.335 362.091 274.882 362.523  c
275.429 362.955 275.703 363.536 275.703 364.265  c
275.703 365.369 274.989 366.286 273.562 367.015  c
275.291 367.755 276.156 368.812 276.156 370.187  c
276.156 371.093 275.812 371.833 275.125 372.406  c
274.437 372.979 273.552 373.265 272.468 373.265  c
271.416 373.265 270.562 373.000 269.906 372.468  c
269.250 371.937 268.921 371.234 268.921 370.359  c
268.921 368.911 269.661 367.843 271.140 367.156  c
h
273.156 366.781 m
274.010 366.156 274.437 365.322 274.437 364.281  c
274.437 363.697 274.263 363.226 273.914 362.867  c
273.565 362.507 273.109 362.328 272.546 362.328  c
272.036 362.328 271.604 362.505 271.250 362.859  c
270.895 363.213 270.718 363.651 270.718 364.171  c
270.718 364.671 270.880 365.093 271.203 365.437  c
271.526 365.781 272.177 366.229 273.156 366.781  c
h
271.468 367.484 m
270.729 368.151 270.359 369.052 270.359 370.187  c
270.359 370.989 270.557 371.627 270.953 372.101  c
271.349 372.575 271.880 372.812 272.546 372.812  c
273.171 372.812 273.687 372.604 274.093 372.187  c
274.500 371.770 274.703 371.244 274.703 370.609  c
274.703 370.078 274.546 369.632 274.234 369.273  c
273.921 368.914 273.338 368.500 272.484 368.031  c
271.468 367.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
345.247 349.000 m
345.247 353.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
343.500 373.265 m
342.385 373.265 341.484 372.747 340.796 371.710  c
340.109 370.674 339.765 369.307 339.765 367.609  c
339.765 365.869 340.109 364.481 340.796 363.445  c
341.484 362.408 342.406 361.890 343.562 361.890  c
344.718 361.890 345.640 362.406 346.328 363.437  c
347.015 364.468 347.359 365.854 347.359 367.593  c
347.359 369.333 347.013 370.713 346.320 371.734  c
345.627 372.755 344.687 373.265 343.500 373.265  c
h
343.531 372.812 m
345.062 372.885 345.828 371.114 345.828 367.500  c
345.828 364.052 345.072 362.328 343.562 362.328  c
342.062 362.328 341.312 364.078 341.312 367.578  c
341.312 371.005 342.052 372.750 343.531 372.812  c
h
349.078 373.000 m
349.078 371.187 l
350.890 371.187 l
350.890 373.000 l
349.078 373.000 l
h
358.687 367.703 m
358.010 368.651 357.140 369.125 356.078 369.125  c
355.130 369.125 354.356 368.807 353.757 368.171  c
353.158 367.536 352.859 366.718 352.859 365.718  c
352.859 364.635 353.197 363.724 353.875 362.984  c
354.552 362.244 355.395 361.875 356.406 361.875  c
357.625 361.875 358.565 362.356 359.226 363.320  c
359.888 364.283 360.218 365.645 360.218 367.406  c
360.218 369.270 359.838 370.713 359.078 371.734  c
358.317 372.755 357.244 373.265 355.859 373.265  c
354.953 373.265 354.156 373.104 353.468 372.781  c
353.468 371.062 l
354.187 371.062 l
354.203 371.218 l
354.234 371.734 l
354.265 372.057 354.442 372.317 354.765 372.515  c
355.088 372.713 355.494 372.812 355.984 372.812  c
356.838 372.812 357.502 372.367 357.976 371.476  c
358.450 370.585 358.687 369.328 358.687 367.703  c
h
358.640 366.156 m
358.640 365.031 358.414 364.114 357.960 363.406  c
357.507 362.697 356.927 362.343 356.218 362.343  c
354.937 362.343 354.296 363.401 354.296 365.515  c
354.296 367.578 354.963 368.609 356.296 368.609  c
357.015 368.609 357.585 368.385 358.007 367.937  c
358.429 367.489 358.640 366.895 358.640 366.156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
136.499 349.000 m
136.499 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
219.998 349.000 m
219.998 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
303.498 349.000 m
303.498 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
386.997 349.000 m
386.997 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
51.0000 349.000 m
51.0000 3.00289 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 163 19 24 rc
newpath
4.96875 180.890 m
5.86458 180.265 6.98958 179.328 8.34375 178.078  c
8.62500 177.812 l
8.56250 176.677 8.41666 175.481 8.18750 174.226  c
7.95833 172.971 7.71875 172.062 7.46875 171.500  c
7.25000 171.031 7.07812 170.755 6.95312 170.671  c
6.82812 170.588 6.48958 170.531 5.93750 170.500  c
5.76562 170.500 l
5.84375 170.046 l
8.51562 170.046 l
9.27604 171.838 9.70833 173.942 9.81250 176.359  c
10.7187 175.187 l
11.6041 174.062 12.1953 173.237 12.4921 172.710  c
12.7890 172.184 12.9375 171.697 12.9375 171.250  c
12.9375 170.791 12.7447 170.390 12.3593 170.046  c
14.1718 170.046 l
14.2760 170.265 14.3281 170.474 14.3281 170.671  c
14.3281 171.088 14.1927 171.523 13.9218 171.976  c
13.6510 172.429 13.0833 173.171 12.2187 174.203  c
9.45312 177.531 l
8.34895 178.854 7.52083 179.974 6.96875 180.890  c
4.96875 180.890 l
h
f
newpath
14.2343 185.000 m
15.2031 180.156 l
15.2656 179.833 15.2968 179.557 15.2968 179.328  c
15.2968 179.151 15.1458 179.052 14.8437 179.031  c
14.4531 179.000 l
14.3437 179.000 l
14.4062 178.640 l
16.6562 178.640 l
15.6875 183.484 l
15.6250 183.807 15.5937 184.083 15.5937 184.312  c
15.5937 184.489 15.7447 184.583 16.0468 184.593  c
16.4375 184.625 l
16.5468 184.640 l
16.4687 185.000 l
14.2343 185.000 l
h
15.7187 177.484 m
15.9531 176.328 l
17.1093 176.328 l
16.8906 177.484 l
15.7187 177.484 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
51.0000 347.000 m
47.0000 347.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
43.1718 358.000 m
43.1718 357.281 l
43.5885 356.062 44.2395 355.041 45.1250 354.218  c
45.9062 353.500 l
46.8020 352.656 47.3984 351.987 47.6953 351.492  c
47.9921 350.997 48.1406 350.432 48.1406 349.796  c
48.1406 349.057 47.9583 348.463 47.5937 348.015  c
47.2291 347.567 46.7500 347.343 46.1562 347.343  c
45.4895 347.343 44.9270 347.526 44.4687 347.890  c
44.3020 348.026 44.1927 348.510 44.1406 349.343  c
44.1406 349.515 l
43.4062 349.515 l
43.4062 347.546 l
44.4583 347.099 45.4322 346.875 46.3281 346.875  c
47.3072 346.875 48.1093 347.151 48.7343 347.703  c
49.3593 348.255 49.6718 348.953 49.6718 349.796  c
49.6718 350.942 48.9635 352.000 47.5468 352.968  c
46.6718 353.578 l
45.2656 354.546 44.4947 355.599 44.3593 356.734  c
49.6250 356.734 l
49.6250 358.000 l
43.1718 358.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 265.956 m
47.0000 265.956 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.1718 276.000 m
30.1718 275.281 l
30.5885 274.062 31.2395 273.041 32.1250 272.218  c
32.9062 271.500 l
33.8020 270.656 34.3984 269.987 34.6953 269.492  c
34.9921 268.997 35.1406 268.432 35.1406 267.796  c
35.1406 267.057 34.9583 266.463 34.5937 266.015  c
34.2291 265.567 33.7500 265.343 33.1562 265.343  c
32.4895 265.343 31.9270 265.526 31.4687 265.890  c
31.3020 266.026 31.1927 266.510 31.1406 267.343  c
31.1406 267.515 l
30.4062 267.515 l
30.4062 265.546 l
31.4583 265.099 32.4322 264.875 33.3281 264.875  c
34.3072 264.875 35.1093 265.151 35.7343 265.703  c
36.3593 266.255 36.6718 266.953 36.6718 267.796  c
36.6718 268.942 35.9635 270.000 34.5468 270.968  c
33.6718 271.578 l
32.2656 272.546 31.4947 273.599 31.3593 274.734  c
36.6250 274.734 l
36.6250 276.000 l
30.1718 276.000 l
h
39.0781 276.000 m
39.0781 274.187 l
40.8906 274.187 l
40.8906 276.000 l
39.0781 276.000 l
h
43.7187 276.015 m
43.7187 274.187 l
44.4375 274.187 l
44.4531 274.359 l
44.4687 274.921 l
44.5000 275.515 44.9687 275.812 45.8750 275.812  c
46.5520 275.812 47.0885 275.549 47.4843 275.023  c
47.8802 274.497 48.0781 273.781 48.0781 272.875  c
48.0781 271.843 47.7708 271.106 47.1562 270.664  c
46.5416 270.221 45.5416 270.000 44.1562 270.000  c
43.8906 270.000 l
43.8906 265.156 l
49.3593 265.156 l
49.3593 266.421 l
44.3437 266.421 l
44.3437 269.453 l
45.0156 269.453 l
48.0677 269.453 49.5937 270.614 49.5937 272.937  c
49.5937 273.979 49.2421 274.794 48.5390 275.382  c
47.8359 275.971 46.8645 276.265 45.6250 276.265  c
45.0104 276.265 44.3750 276.182 43.7187 276.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 184.913 m
47.0000 184.913 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
43.3593 194.921 m
43.3593 193.015 l
44.0781 193.015 l
44.0937 193.171 l
44.1093 193.687 l
44.1093 194.000 44.2942 194.268 44.6640 194.492  c
45.0338 194.716 45.4843 194.828 46.0156 194.828  c
46.6510 194.828 47.1640 194.575 47.5546 194.070  c
47.9453 193.565 48.1406 192.895 48.1406 192.062  c
48.1406 191.239 47.8854 190.596 47.3750 190.132  c
46.8645 189.669 46.1562 189.437 45.2500 189.437  c
44.3437 189.437 l
44.3437 189.000 l
44.8281 189.000 l
46.8802 189.000 47.9062 188.177 47.9062 186.531  c
47.9062 185.062 47.2604 184.328 45.9687 184.328  c
45.4062 184.328 44.9114 184.447 44.4843 184.687  c
44.3281 184.781 44.2239 185.171 44.1718 185.859  c
44.1562 185.968 l
43.4375 185.968 l
43.4375 184.312 l
44.2187 184.020 45.1041 183.875 46.0937 183.875  c
47.0937 183.875 47.8854 184.099 48.4687 184.546  c
49.0520 184.994 49.3437 185.604 49.3437 186.375  c
49.3437 187.666 48.5833 188.588 47.0625 189.140  c
47.9895 189.380 48.6536 189.721 49.0546 190.164  c
49.4557 190.606 49.6562 191.224 49.6562 192.015  c
49.6562 193.015 49.3333 193.807 48.6875 194.390  c
48.0416 194.974 47.1614 195.265 46.0468 195.265  c
45.0156 195.265 44.1197 195.151 43.3593 194.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 103.870 m
47.0000 103.870 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.3593 113.921 m
30.3593 112.015 l
31.0781 112.015 l
31.0937 112.171 l
31.1093 112.687 l
31.1093 113.000 31.2942 113.268 31.6640 113.492  c
32.0338 113.716 32.4843 113.828 33.0156 113.828  c
33.6510 113.828 34.1640 113.575 34.5546 113.070  c
34.9453 112.565 35.1406 111.895 35.1406 111.062  c
35.1406 110.239 34.8854 109.596 34.3750 109.132  c
33.8645 108.669 33.1562 108.437 32.2500 108.437  c
31.3437 108.437 l
31.3437 108.000 l
31.8281 108.000 l
33.8802 108.000 34.9062 107.177 34.9062 105.531  c
34.9062 104.062 34.2604 103.328 32.9687 103.328  c
32.4062 103.328 31.9114 103.447 31.4843 103.687  c
31.3281 103.781 31.2239 104.171 31.1718 104.859  c
31.1562 104.968 l
30.4375 104.968 l
30.4375 103.312 l
31.2187 103.020 32.1041 102.875 33.0937 102.875  c
34.0937 102.875 34.8854 103.099 35.4687 103.546  c
36.0520 103.994 36.3437 104.604 36.3437 105.375  c
36.3437 106.666 35.5833 107.588 34.0625 108.140  c
34.9895 108.380 35.6536 108.721 36.0546 109.164  c
36.4557 109.606 36.6562 110.224 36.6562 111.015  c
36.6562 112.015 36.3333 112.807 35.6875 113.390  c
35.0416 113.974 34.1614 114.265 33.0468 114.265  c
32.0156 114.265 31.1197 114.151 30.3593 113.921  c
h
39.0781 114.000 m
39.0781 112.187 l
40.8906 112.187 l
40.8906 114.000 l
39.0781 114.000 l
h
43.7187 114.015 m
43.7187 112.187 l
44.4375 112.187 l
44.4531 112.359 l
44.4687 112.921 l
44.5000 113.515 44.9687 113.812 45.8750 113.812  c
46.5520 113.812 47.0885 113.549 47.4843 113.023  c
47.8802 112.497 48.0781 111.781 48.0781 110.875  c
48.0781 109.843 47.7708 109.106 47.1562 108.664  c
46.5416 108.221 45.5416 108.000 44.1562 108.000  c
43.8906 108.000 l
43.8906 103.156 l
49.3593 103.156 l
49.3593 104.421 l
44.3437 104.421 l
44.3437 107.453 l
45.0156 107.453 l
48.0677 107.453 49.5937 108.614 49.5937 110.937  c
49.5937 111.979 49.2421 112.794 48.5390 113.382  c
47.8359 113.971 46.8645 114.265 45.6250 114.265  c
45.0104 114.265 44.3750 114.182 43.7187 114.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 22.8274 m
47.0000 22.8274 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
47.4218 29.9375 m
42.4531 29.9375 l
42.4531 29.2031 l
47.8750 21.9843 l
48.6875 21.9843 l
48.6875 28.8437 l
50.1406 28.8437 l
50.1406 29.9375 l
48.6875 29.9375 l
48.6875 31.1093 l
48.6875 31.6822 48.7317 32.0520 48.8203 32.2187  c
48.9088 32.3854 49.1041 32.4791 49.4062 32.5000  c
49.9062 32.5312 l
50.0468 32.5468 l
50.0468 33.0000 l
45.8906 33.0000 l
45.8906 32.5468 l
46.0156 32.5312 l
46.7812 32.5000 l
47.0416 32.4895 47.2135 32.3932 47.2968 32.2109  c
47.3802 32.0286 47.4218 31.6614 47.4218 31.1093  c
47.4218 29.9375 l
h
43.2656 28.8437 m
47.4218 28.8437 l
47.4218 23.3125 l
43.2656 28.8437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 330.791 m
49.0000 330.791 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 314.582 m
49.0000 314.582 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 298.374 m
49.0000 298.374 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 282.165 m
49.0000 282.165 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 249.748 m
49.0000 249.748 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 233.539 m
49.0000 233.539 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 217.331 m
49.0000 217.331 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 201.122 m
49.0000 201.122 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 168.705 m
49.0000 168.705 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 152.496 m
49.0000 152.496 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 136.287 m
49.0000 136.287 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 120.079 m
49.0000 120.079 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 87.6619 m
49.0000 87.6619 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 71.4533 m
49.0000 71.4533 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 55.2446 m
49.0000 55.2446 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 39.0360 m
49.0000 39.0360 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
51.0000 6.61880 m
49.0000 6.61880 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
