%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2022 3:49:53 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
0 0 1.00000 RG
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
0 0 0 RG
1.00000 w
q
Q
1.50000 w
1.00000 w
q
Q
1.50000 w
0 0 1.00000 RG
q
q
72.0000 1.00288 309.984 347.997 rc
newpath
73.0000 348.000 m
76.1008 343.422 l
79.2017 335.896 l
82.3025 325.590 l
85.4034 312.733 l
88.5042 297.615 l
91.6051 280.580 l
94.7059 262.017 l
97.8068 242.347 l
100.907 222.009 l
104.008 201.434 l
107.109 181.034 l
110.210 161.175 l
113.311 142.169 l
116.411 124.261 l
119.512 107.628 l
122.613 92.3821 l
125.714 78.5735 l
128.815 66.2054 l
131.916 55.2426 l
135.017 45.6221 l
138.117 37.2626 l
141.218 30.0729 l
144.319 23.9571 l
147.420 18.8196 l
150.521 14.5675 l
153.622 11.1132 l
156.723 8.37466 l
159.823 6.27645 l
162.924 4.74978 l
166.025 3.73199 l
169.126 3.16665 l
172.227 3.00286 l
175.328 3.19500 l
178.429 3.70199 l
181.529 4.48724 l
184.630 5.51794 l
187.731 6.76470 l
190.832 8.20141 l
193.933 9.80456 l
197.034 11.5532 l
200.134 13.4287 l
203.235 15.4144 l
206.336 17.4952 l
209.437 19.6579 l
212.538 21.8906 l
215.639 24.1825 l
218.740 26.5242 l
221.840 28.9070 l
224.941 31.3236 l
228.042 33.7669 l
231.143 36.2310 l
234.244 38.7104 l
237.345 41.2003 l
240.446 43.6964 l
243.546 46.1947 l
246.647 48.6919 l
249.748 51.1850 l
252.849 53.6711 l
255.950 56.1480 l
259.051 58.6134 l
262.152 61.0656 l
265.252 63.5027 l
268.353 65.9235 l
271.454 68.3264 l
274.555 70.7106 l
277.656 73.0749 l
280.757 75.4187 l
283.858 77.7410 l
286.958 80.0413 l
290.059 82.3191 l
293.160 84.5740 l
296.261 86.8057 l
299.362 89.0137 l
302.463 91.1980 l
305.563 93.3582 l
308.664 95.4945 l
311.765 97.6065 l
314.866 99.6945 l
317.967 101.758 l
321.068 103.798 l
324.169 105.813 l
327.269 107.805 l
330.370 109.773 l
333.471 111.717 l
336.572 113.638 l
339.673 115.536 l
342.774 117.410 l
345.875 119.262 l
348.975 121.091 l
352.076 122.897 l
355.177 124.681 l
358.278 126.444 l
361.379 128.184 l
364.480 129.903 l
367.581 131.601 l
370.681 133.278 l
373.782 134.934 l
376.883 136.570 l
379.984 138.186 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
0 0 0 RG
q
1.00000 w
newpath
71.0000 350.000 m
379.984 350.000 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
219 372 15 17 rc
newpath
230.359 384.687 m
230.328 384.968 230.255 385.205 230.140 385.398  c
230.026 385.591 229.893 385.747 229.742 385.867  c
229.591 385.987 229.432 386.075 229.265 386.132  c
229.099 386.190 228.942 386.218 228.796 386.218  c
228.567 386.218 228.362 386.164 228.179 386.054  c
227.997 385.945 227.859 385.786 227.765 385.578  c
227.724 385.494 227.695 385.401 227.679 385.296  c
227.664 385.192 227.640 385.078 227.609 384.953  c
227.546 385.046 227.497 385.117 227.460 385.164  c
227.424 385.210 227.364 385.276 227.281 385.359  c
227.000 385.640 226.721 385.854 226.445 386.000  c
226.169 386.145 225.859 386.218 225.515 386.218  c
225.265 386.218 225.052 386.164 224.875 386.054  c
224.697 385.945 224.494 385.791 224.265 385.593  c
224.265 385.875 l
224.265 386.072 224.286 386.255 224.328 386.421  c
224.369 386.588 224.416 386.752 224.468 386.914  c
224.520 387.075 224.567 387.239 224.609 387.406  c
224.651 387.572 224.671 387.760 224.671 387.968  c
224.671 388.239 224.614 388.463 224.500 388.640  c
224.385 388.817 224.234 388.906 224.046 388.906  c
223.901 388.906 223.760 388.828 223.625 388.671  c
223.489 388.515 223.421 388.286 223.421 387.984  c
223.421 387.786 223.442 387.606 223.484 387.445  c
223.526 387.283 223.567 387.127 223.609 386.976  c
223.651 386.825 223.692 386.666 223.734 386.500  c
223.776 386.333 223.796 386.135 223.796 385.906  c
223.796 379.500 l
224.906 379.500 l
224.906 383.875 l
224.906 384.375 225.036 384.755 225.296 385.015  c
225.411 385.130 225.546 385.213 225.703 385.265  c
225.859 385.317 226.010 385.343 226.156 385.343  c
226.281 385.343 226.414 385.315 226.554 385.257  c
226.695 385.200 226.835 385.125 226.976 385.031  c
227.117 384.937 227.242 384.830 227.351 384.710  c
227.460 384.591 227.546 384.468 227.609 384.343  c
227.609 379.500 l
228.718 379.500 l
228.718 384.484 l
228.718 384.796 228.781 385.057 228.906 385.265  c
229.031 385.474 229.203 385.578 229.421 385.578  c
229.661 385.578 229.843 385.453 229.968 385.203  c
230.000 385.140 230.026 385.062 230.046 384.968  c
230.067 384.875 230.083 384.781 230.093 384.687  c
230.359 384.687 l
230.359 384.687 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
100.907 350.000 m
100.907 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
106.281 363.062 m
106.281 372.109 l
106.328 372.828 l
106.349 373.119 106.434 373.309 106.585 373.398  c
106.737 373.487 107.046 373.531 107.515 373.531  c
108.375 373.546 l
108.375 374.000 l
102.765 374.000 l
102.765 373.546 l
103.625 373.531 l
104.083 373.531 104.388 373.487 104.539 373.398  c
104.690 373.309 104.776 373.119 104.796 372.828  c
104.843 372.109 l
104.843 365.375 l
104.796 364.640 l
104.796 364.296 104.697 364.125 104.500 364.125  c
104.354 364.125 104.015 364.171 103.484 364.265  c
102.765 364.390 l
102.765 363.937 l
106.281 363.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
131.916 350.000 m
131.916 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
133.171 374.000 m
133.171 373.281 l
133.588 372.062 134.239 371.041 135.125 370.218  c
135.906 369.500 l
136.802 368.656 137.398 367.987 137.695 367.492  c
137.992 366.997 138.140 366.432 138.140 365.796  c
138.140 365.057 137.958 364.463 137.593 364.015  c
137.229 363.567 136.750 363.343 136.156 363.343  c
135.489 363.343 134.927 363.526 134.468 363.890  c
134.302 364.026 134.192 364.510 134.140 365.343  c
134.140 365.515 l
133.406 365.515 l
133.406 363.546 l
134.458 363.099 135.432 362.875 136.328 362.875  c
137.307 362.875 138.109 363.151 138.734 363.703  c
139.359 364.255 139.671 364.953 139.671 365.796  c
139.671 366.942 138.963 368.000 137.546 368.968  c
136.671 369.578 l
135.265 370.546 134.494 371.599 134.359 372.734  c
139.625 372.734 l
139.625 374.000 l
133.171 374.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
162.924 350.000 m
162.924 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
164.359 373.921 m
164.359 372.015 l
165.078 372.015 l
165.093 372.171 l
165.109 372.687 l
165.109 373.000 165.294 373.268 165.664 373.492  c
166.033 373.716 166.484 373.828 167.015 373.828  c
167.651 373.828 168.164 373.575 168.554 373.070  c
168.945 372.565 169.140 371.895 169.140 371.062  c
169.140 370.239 168.885 369.596 168.375 369.132  c
167.864 368.669 167.156 368.437 166.250 368.437  c
165.343 368.437 l
165.343 368.000 l
165.828 368.000 l
167.880 368.000 168.906 367.177 168.906 365.531  c
168.906 364.062 168.260 363.328 166.968 363.328  c
166.406 363.328 165.911 363.447 165.484 363.687  c
165.328 363.781 165.224 364.171 165.171 364.859  c
165.156 364.968 l
164.437 364.968 l
164.437 363.312 l
165.218 363.020 166.104 362.875 167.093 362.875  c
168.093 362.875 168.885 363.099 169.468 363.546  c
170.052 363.994 170.343 364.604 170.343 365.375  c
170.343 366.666 169.583 367.588 168.062 368.140  c
168.989 368.380 169.653 368.721 170.054 369.164  c
170.455 369.606 170.656 370.224 170.656 371.015  c
170.656 372.015 170.333 372.807 169.687 373.390  c
169.041 373.974 168.161 374.265 167.046 374.265  c
166.015 374.265 165.119 374.151 164.359 373.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
193.933 350.000 m
193.933 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
199.421 370.937 m
194.453 370.937 l
194.453 370.203 l
199.875 362.984 l
200.687 362.984 l
200.687 369.843 l
202.140 369.843 l
202.140 370.937 l
200.687 370.937 l
200.687 372.109 l
200.687 372.682 200.731 373.052 200.820 373.218  c
200.908 373.385 201.104 373.479 201.406 373.500  c
201.906 373.531 l
202.046 373.546 l
202.046 374.000 l
197.890 374.000 l
197.890 373.546 l
198.015 373.531 l
198.781 373.500 l
199.041 373.489 199.213 373.393 199.296 373.210  c
199.380 373.028 199.421 372.661 199.421 372.109  c
199.421 370.937 l
h
195.265 369.843 m
199.421 369.843 l
199.421 364.312 l
195.265 369.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
224.941 350.000 m
224.941 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
226.718 374.015 m
226.718 372.187 l
227.437 372.187 l
227.453 372.359 l
227.468 372.921 l
227.500 373.515 227.968 373.812 228.875 373.812  c
229.552 373.812 230.088 373.549 230.484 373.023  c
230.880 372.497 231.078 371.781 231.078 370.875  c
231.078 369.843 230.770 369.106 230.156 368.664  c
229.541 368.221 228.541 368.000 227.156 368.000  c
226.890 368.000 l
226.890 363.156 l
232.359 363.156 l
232.359 364.421 l
227.343 364.421 l
227.343 367.453 l
228.015 367.453 l
231.067 367.453 232.593 368.614 232.593 370.937  c
232.593 371.979 232.242 372.794 231.539 373.382  c
230.835 373.971 229.864 374.265 228.625 374.265  c
228.010 374.265 227.375 374.182 226.718 374.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
255.950 350.000 m
255.950 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
258.437 368.453 m
259.114 367.515 259.984 367.046 261.046 367.046  c
261.994 367.046 262.768 367.362 263.367 367.992  c
263.966 368.622 264.265 369.437 264.265 370.437  c
264.265 371.520 263.924 372.429 263.242 373.164  c
262.559 373.898 261.718 374.265 260.718 374.265  c
259.500 374.265 258.559 373.789 257.898 372.835  c
257.237 371.882 256.906 370.520 256.906 368.750  c
256.906 366.885 257.286 365.440 258.046 364.414  c
258.807 363.388 259.885 362.875 261.281 362.875  c
262.177 362.875 262.968 363.036 263.656 363.359  c
263.656 365.093 l
262.937 365.093 l
262.921 364.953 l
262.890 364.421 l
262.859 364.099 262.682 363.835 262.359 363.632  c
262.036 363.429 261.630 363.328 261.140 363.328  c
260.286 363.328 259.622 363.776 259.148 364.671  c
258.674 365.567 258.437 366.828 258.437 368.453  c
h
258.484 370.000 m
258.484 371.114 258.710 372.028 259.164 372.742  c
259.617 373.455 260.197 373.812 260.906 373.812  c
262.177 373.812 262.812 372.755 262.812 370.640  c
262.812 368.578 262.151 367.546 260.828 367.546  c
260.109 367.546 259.539 367.768 259.117 368.210  c
258.695 368.653 258.484 369.250 258.484 370.000  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
286.958 350.000 m
286.958 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
289.062 374.000 m
289.270 372.822 289.617 371.799 290.101 370.929  c
290.585 370.059 291.729 368.411 293.531 365.984  c
294.625 364.515 l
288.515 364.515 l
288.515 363.156 l
295.468 363.156 l
295.468 364.109 l
292.500 368.099 290.932 371.395 290.765 374.000  c
289.062 374.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
317.967 350.000 m
317.967 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
321.140 368.156 m
320.026 367.395 319.468 366.557 319.468 365.640  c
319.468 364.817 319.765 364.151 320.359 363.640  c
320.953 363.130 321.729 362.875 322.687 362.875  c
323.604 362.875 324.335 363.091 324.882 363.523  c
325.429 363.955 325.703 364.536 325.703 365.265  c
325.703 366.369 324.989 367.286 323.562 368.015  c
325.291 368.755 326.156 369.812 326.156 371.187  c
326.156 372.093 325.812 372.833 325.125 373.406  c
324.437 373.979 323.552 374.265 322.468 374.265  c
321.416 374.265 320.562 374.000 319.906 373.468  c
319.250 372.937 318.921 372.234 318.921 371.359  c
318.921 369.911 319.661 368.843 321.140 368.156  c
h
323.156 367.781 m
324.010 367.156 324.437 366.322 324.437 365.281  c
324.437 364.697 324.263 364.226 323.914 363.867  c
323.565 363.507 323.109 363.328 322.546 363.328  c
322.036 363.328 321.604 363.505 321.250 363.859  c
320.895 364.213 320.718 364.651 320.718 365.171  c
320.718 365.671 320.880 366.093 321.203 366.437  c
321.526 366.781 322.177 367.229 323.156 367.781  c
h
321.468 368.484 m
320.729 369.151 320.359 370.052 320.359 371.187  c
320.359 371.989 320.557 372.627 320.953 373.101  c
321.349 373.575 321.880 373.812 322.546 373.812  c
323.171 373.812 323.687 373.604 324.093 373.187  c
324.500 372.770 324.703 372.244 324.703 371.609  c
324.703 371.078 324.546 370.632 324.234 370.273  c
323.921 369.914 323.338 369.500 322.484 369.031  c
321.468 368.484 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
348.975 350.000 m
348.975 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
355.687 368.703 m
355.010 369.651 354.140 370.125 353.078 370.125  c
352.130 370.125 351.356 369.807 350.757 369.171  c
350.158 368.536 349.859 367.718 349.859 366.718  c
349.859 365.635 350.197 364.724 350.875 363.984  c
351.552 363.244 352.395 362.875 353.406 362.875  c
354.625 362.875 355.565 363.356 356.226 364.320  c
356.888 365.283 357.218 366.645 357.218 368.406  c
357.218 370.270 356.838 371.713 356.078 372.734  c
355.317 373.755 354.244 374.265 352.859 374.265  c
351.953 374.265 351.156 374.104 350.468 373.781  c
350.468 372.062 l
351.187 372.062 l
351.203 372.218 l
351.234 372.734 l
351.265 373.057 351.442 373.317 351.765 373.515  c
352.088 373.713 352.494 373.812 352.984 373.812  c
353.838 373.812 354.502 373.367 354.976 372.476  c
355.450 371.585 355.687 370.328 355.687 368.703  c
h
355.640 367.156 m
355.640 366.031 355.414 365.114 354.960 364.406  c
354.507 363.697 353.927 363.343 353.218 363.343  c
351.937 363.343 351.296 364.401 351.296 366.515  c
351.296 368.578 351.963 369.609 353.296 369.609  c
354.015 369.609 354.585 369.385 355.007 368.937  c
355.429 368.489 355.640 367.895 355.640 367.156  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
379.984 350.000 m
379.984 354.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
380.281 363.062 m
380.281 372.109 l
380.328 372.828 l
380.349 373.119 380.434 373.309 380.585 373.398  c
380.737 373.487 381.046 373.531 381.515 373.531  c
382.375 373.546 l
382.375 374.000 l
376.765 374.000 l
376.765 373.546 l
377.625 373.531 l
378.083 373.531 378.388 373.487 378.539 373.398  c
378.690 373.309 378.776 373.119 378.796 372.828  c
378.843 372.109 l
378.843 365.375 l
378.796 364.640 l
378.796 364.296 378.697 364.125 378.500 364.125  c
378.354 364.125 378.015 364.171 377.484 364.265  c
376.765 364.390 l
376.765 363.937 l
380.281 363.062 l
h
388.500 374.265 m
387.385 374.265 386.484 373.747 385.796 372.710  c
385.109 371.674 384.765 370.307 384.765 368.609  c
384.765 366.869 385.109 365.481 385.796 364.445  c
386.484 363.408 387.406 362.890 388.562 362.890  c
389.718 362.890 390.640 363.406 391.328 364.437  c
392.015 365.468 392.359 366.854 392.359 368.593  c
392.359 370.333 392.013 371.713 391.320 372.734  c
390.627 373.755 389.687 374.265 388.500 374.265  c
h
388.531 373.812 m
390.062 373.885 390.828 372.114 390.828 368.500  c
390.828 365.052 390.072 363.328 388.562 363.328  c
387.062 363.328 386.312 365.078 386.312 368.578  c
386.312 372.005 387.052 373.750 388.531 373.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
85.4034 350.000 m
85.4034 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
116.411 350.000 m
116.411 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
147.420 350.000 m
147.420 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
178.429 350.000 m
178.429 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
209.437 350.000 m
209.437 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
240.446 350.000 m
240.446 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
271.454 350.000 m
271.454 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
302.463 350.000 m
302.463 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
333.471 350.000 m
333.471 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
364.480 350.000 m
364.480 352.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
71.0000 350.000 m
71.0000 3.00286 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 164 21 22 rc
newpath
10.2187 175.218 m
10.2187 174.781 10.1380 174.354 9.97656 173.937  c
9.81510 173.520 9.59375 173.171 9.31250 172.890  c
8.87500 172.453 8.40625 172.234 7.90625 172.234  c
7.75000 172.234 7.62239 172.255 7.52343 172.296  c
7.42447 172.338 7.32812 172.406 7.23437 172.500  c
7.05729 172.687 6.94010 172.869 6.88281 173.046  c
6.82552 173.224 6.79687 173.390 6.79687 173.546  c
6.79687 173.630 6.79947 173.726 6.80468 173.835  c
6.80989 173.945 6.81250 174.031 6.81250 174.093  c
6.87500 176.484 l
6.87500 176.557 6.90364 176.661 6.96093 176.796  c
7.01822 176.932 7.11197 177.065 7.24218 177.195  c
7.37239 177.325 7.52864 177.437 7.71093 177.531  c
7.89322 177.625 8.10937 177.671 8.35937 177.671  c
8.93229 177.671 9.38541 177.450 9.71875 177.007  c
10.0520 176.565 10.2187 175.968 10.2187 175.218  c
h
11.3750 174.718 m
11.3750 175.052 11.3255 175.380 11.2265 175.703  c
11.1276 176.026 11.0208 176.312 10.9062 176.562  c
10.7604 176.854 10.5885 177.106 10.3906 177.320  c
10.1927 177.533 9.98697 177.705 9.77343 177.835  c
9.55989 177.966 9.34114 178.067 9.11718 178.140  c
8.89322 178.213 8.68750 178.250 8.50000 178.250  c
8.20833 178.250 7.90625 178.182 7.59375 178.046  c
7.28125 177.911 7.05208 177.724 6.90625 177.484  c
6.90625 179.734 l
6.90625 179.911 6.89843 180.112 6.88281 180.335  c
6.86718 180.559 6.83333 180.776 6.78125 180.984  c
5.65625 180.984 l
5.66666 180.828 5.69531 180.656 5.74218 180.468  c
5.78906 180.281 5.81250 180.052 5.81250 179.781  c
5.81250 179.583 5.80989 179.390 5.80468 179.203  c
5.79947 179.015 5.79687 178.906 5.79687 178.875  c
5.75000 175.406 l
5.75000 175.354 5.75000 175.286 5.75000 175.203  c
5.75000 175.119 5.74739 175.028 5.74218 174.929  c
5.73697 174.830 5.73437 174.734 5.73437 174.640  c
5.73437 174.536 5.73437 174.442 5.73437 174.359  c
5.73437 173.994 5.79166 173.661 5.90625 173.359  c
6.02083 173.057 6.20312 172.781 6.45312 172.531  c
6.59895 172.385 6.75520 172.247 6.92187 172.117  c
7.08854 171.987 7.28645 171.864 7.51562 171.750  c
7.72395 171.645 7.90364 171.580 8.05468 171.554  c
8.20572 171.528 8.35937 171.515 8.51562 171.515  c
9.05729 171.515 9.54687 171.645 9.98437 171.906  c
10.4218 172.166 10.7864 172.583 11.0781 173.156  c
11.1718 173.343 11.2447 173.570 11.2968 173.835  c
11.3489 174.101 11.3750 174.395 11.3750 174.718  c
h
f
newpath
17.6562 182.984 m
17.6354 183.203 17.5807 183.388 17.4921 183.539  c
17.4036 183.690 17.3020 183.812 17.1875 183.906  c
17.0729 184.000 16.9505 184.067 16.8203 184.109  c
16.6901 184.151 16.5677 184.171 16.4531 184.171  c
16.2864 184.171 16.1328 184.127 15.9921 184.039  c
15.8515 183.950 15.7447 183.833 15.6718 183.687  c
15.6406 183.614 15.6171 183.539 15.6015 183.460  c
15.5859 183.382 15.5677 183.291 15.5468 183.187  c
15.4947 183.260 15.4557 183.315 15.4296 183.351  c
15.4036 183.388 15.3593 183.442 15.2968 183.515  c
15.0781 183.724 14.8619 183.885 14.6484 184.000  c
14.4349 184.114 14.1979 184.171 13.9375 184.171  c
13.7500 184.171 13.5859 184.130 13.4453 184.046  c
13.3046 183.963 13.1458 183.843 12.9687 183.687  c
12.9687 183.906 l
12.9687 184.052 12.9843 184.190 13.0156 184.320  c
13.0468 184.450 13.0833 184.578 13.1250 184.703  c
13.1666 184.828 13.2057 184.955 13.2421 185.085  c
13.2786 185.216 13.2968 185.359 13.2968 185.515  c
13.2968 185.724 13.2500 185.895 13.1562 186.031  c
13.0625 186.166 12.9479 186.234 12.8125 186.234  c
12.6979 186.234 12.5885 186.174 12.4843 186.054  c
12.3802 185.934 12.3281 185.760 12.3281 185.531  c
12.3281 185.375 12.3437 185.237 12.3750 185.117  c
12.4062 184.997 12.4375 184.877 12.4687 184.757  c
12.5000 184.638 12.5312 184.513 12.5625 184.382  c
12.5937 184.252 12.6093 184.104 12.6093 183.937  c
12.6093 179.000 l
13.4687 179.000 l
13.4687 182.359 l
13.4687 182.744 13.5677 183.036 13.7656 183.234  c
13.8593 183.328 13.9661 183.393 14.0859 183.429  c
14.2057 183.466 14.3229 183.484 14.4375 183.484  c
14.5208 183.484 14.6197 183.463 14.7343 183.421  c
14.8489 183.380 14.9583 183.325 15.0625 183.257  c
15.1666 183.190 15.2604 183.109 15.3437 183.015  c
15.4270 182.921 15.4947 182.822 15.5468 182.718  c
15.5468 179.000 l
16.4062 179.000 l
16.4062 182.843 l
16.4062 183.072 16.4531 183.270 16.5468 183.437  c
16.6406 183.604 16.7708 183.687 16.9375 183.687  c
17.1250 183.687 17.2656 183.588 17.3593 183.390  c
17.3906 183.338 17.4114 183.276 17.4218 183.203  c
17.4322 183.130 17.4427 183.057 17.4531 182.984  c
17.6562 182.984 l
17.6562 182.984 l
h
f
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
71.0000 275.567 m
67.0000 275.567 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.1718 286.000 m
32.1718 285.281 l
32.5885 284.062 33.2395 283.041 34.1250 282.218  c
34.9062 281.500 l
35.8020 280.656 36.3984 279.987 36.6953 279.492  c
36.9921 278.997 37.1406 278.432 37.1406 277.796  c
37.1406 277.057 36.9583 276.463 36.5937 276.015  c
36.2291 275.567 35.7500 275.343 35.1562 275.343  c
34.4895 275.343 33.9270 275.526 33.4687 275.890  c
33.3020 276.026 33.1927 276.510 33.1406 277.343  c
33.1406 277.515 l
32.4062 277.515 l
32.4062 275.546 l
33.4583 275.099 34.4322 274.875 35.3281 274.875  c
36.3072 274.875 37.1093 275.151 37.7343 275.703  c
38.3593 276.255 38.6718 276.953 38.6718 277.796  c
38.6718 278.942 37.9635 280.000 36.5468 280.968  c
35.6718 281.578 l
34.2656 282.546 33.4947 283.599 33.3593 284.734  c
38.6250 284.734 l
38.6250 286.000 l
32.1718 286.000 l
h
41.0781 286.000 m
41.0781 284.187 l
42.8906 284.187 l
42.8906 286.000 l
41.0781 286.000 l
h
48.5000 286.265 m
47.3854 286.265 46.4843 285.747 45.7968 284.710  c
45.1093 283.674 44.7656 282.307 44.7656 280.609  c
44.7656 278.869 45.1093 277.481 45.7968 276.445  c
46.4843 275.408 47.4062 274.890 48.5625 274.890  c
49.7187 274.890 50.6406 275.406 51.3281 276.437  c
52.0156 277.468 52.3593 278.854 52.3593 280.593  c
52.3593 282.333 52.0130 283.713 51.3203 284.734  c
50.6276 285.755 49.6875 286.265 48.5000 286.265  c
h
48.5312 285.812 m
50.0625 285.885 50.8281 284.114 50.8281 280.500  c
50.8281 277.052 50.0729 275.328 48.5625 275.328  c
47.0625 275.328 46.3125 277.078 46.3125 280.578  c
46.3125 284.005 47.0520 285.750 48.5312 285.812  c
h
57.5000 286.265 m
56.3854 286.265 55.4843 285.747 54.7968 284.710  c
54.1093 283.674 53.7656 282.307 53.7656 280.609  c
53.7656 278.869 54.1093 277.481 54.7968 276.445  c
55.4843 275.408 56.4062 274.890 57.5625 274.890  c
58.7187 274.890 59.6406 275.406 60.3281 276.437  c
61.0156 277.468 61.3593 278.854 61.3593 280.593  c
61.3593 282.333 61.0130 283.713 60.3203 284.734  c
59.6276 285.755 58.6875 286.265 57.5000 286.265  c
h
57.5312 285.812 m
59.0625 285.885 59.8281 284.114 59.8281 280.500  c
59.8281 277.052 59.0729 275.328 57.5625 275.328  c
56.0625 275.328 55.3125 277.078 55.3125 280.578  c
55.3125 284.005 56.0520 285.750 57.5312 285.812  c
h
63.7187 286.015 m
63.7187 284.187 l
64.4375 284.187 l
64.4531 284.359 l
64.4687 284.921 l
64.5000 285.515 64.9687 285.812 65.8750 285.812  c
66.5520 285.812 67.0885 285.549 67.4843 285.023  c
67.8802 284.497 68.0781 283.781 68.0781 282.875  c
68.0781 281.843 67.7708 281.106 67.1562 280.664  c
66.5416 280.221 65.5416 280.000 64.1562 280.000  c
63.8906 280.000 l
63.8906 275.156 l
69.3593 275.156 l
69.3593 276.421 l
64.3437 276.421 l
64.3437 279.453 l
65.0156 279.453 l
68.0677 279.453 69.5937 280.614 69.5937 282.937  c
69.5937 283.979 69.2421 284.794 68.5390 285.382  c
67.8359 285.971 66.8645 286.265 65.6250 286.265  c
65.0104 286.265 64.3750 286.182 63.7187 286.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 201.590 m
67.0000 201.590 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.1718 212.000 m
32.1718 211.281 l
32.5885 210.062 33.2395 209.041 34.1250 208.218  c
34.9062 207.500 l
35.8020 206.656 36.3984 205.987 36.6953 205.492  c
36.9921 204.997 37.1406 204.432 37.1406 203.796  c
37.1406 203.057 36.9583 202.463 36.5937 202.015  c
36.2291 201.567 35.7500 201.343 35.1562 201.343  c
34.4895 201.343 33.9270 201.526 33.4687 201.890  c
33.3020 202.026 33.1927 202.510 33.1406 203.343  c
33.1406 203.515 l
32.4062 203.515 l
32.4062 201.546 l
33.4583 201.099 34.4322 200.875 35.3281 200.875  c
36.3072 200.875 37.1093 201.151 37.7343 201.703  c
38.3593 202.255 38.6718 202.953 38.6718 203.796  c
38.6718 204.942 37.9635 206.000 36.5468 206.968  c
35.6718 207.578 l
34.2656 208.546 33.4947 209.599 33.3593 210.734  c
38.6250 210.734 l
38.6250 212.000 l
32.1718 212.000 l
h
41.0781 212.000 m
41.0781 210.187 l
42.8906 210.187 l
42.8906 212.000 l
41.0781 212.000 l
h
48.5000 212.265 m
47.3854 212.265 46.4843 211.747 45.7968 210.710  c
45.1093 209.674 44.7656 208.307 44.7656 206.609  c
44.7656 204.869 45.1093 203.481 45.7968 202.445  c
46.4843 201.408 47.4062 200.890 48.5625 200.890  c
49.7187 200.890 50.6406 201.406 51.3281 202.437  c
52.0156 203.468 52.3593 204.854 52.3593 206.593  c
52.3593 208.333 52.0130 209.713 51.3203 210.734  c
50.6276 211.755 49.6875 212.265 48.5000 212.265  c
h
48.5312 211.812 m
50.0625 211.885 50.8281 210.114 50.8281 206.500  c
50.8281 203.052 50.0729 201.328 48.5625 201.328  c
47.0625 201.328 46.3125 203.078 46.3125 206.578  c
46.3125 210.005 47.0520 211.750 48.5312 211.812  c
h
58.2812 201.062 m
58.2812 210.109 l
58.3281 210.828 l
58.3489 211.119 58.4349 211.309 58.5859 211.398  c
58.7369 211.487 59.0468 211.531 59.5156 211.531  c
60.3750 211.546 l
60.3750 212.000 l
54.7656 212.000 l
54.7656 211.546 l
55.6250 211.531 l
56.0833 211.531 56.3880 211.487 56.5390 211.398  c
56.6901 211.309 56.7760 211.119 56.7968 210.828  c
56.8437 210.109 l
56.8437 203.375 l
56.7968 202.640 l
56.7968 202.296 56.6979 202.125 56.5000 202.125  c
56.3541 202.125 56.0156 202.171 55.4843 202.265  c
54.7656 202.390 l
54.7656 201.937 l
58.2812 201.062 l
h
66.5000 212.265 m
65.3854 212.265 64.4843 211.747 63.7968 210.710  c
63.1093 209.674 62.7656 208.307 62.7656 206.609  c
62.7656 204.869 63.1093 203.481 63.7968 202.445  c
64.4843 201.408 65.4062 200.890 66.5625 200.890  c
67.7187 200.890 68.6406 201.406 69.3281 202.437  c
70.0156 203.468 70.3593 204.854 70.3593 206.593  c
70.3593 208.333 70.0130 209.713 69.3203 210.734  c
68.6276 211.755 67.6875 212.265 66.5000 212.265  c
h
66.5312 211.812 m
68.0625 211.885 68.8281 210.114 68.8281 206.500  c
68.8281 203.052 68.0729 201.328 66.5625 201.328  c
65.0625 201.328 64.3125 203.078 64.3125 206.578  c
64.3125 210.005 65.0520 211.750 66.5312 211.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 127.613 m
67.0000 127.613 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.1718 138.000 m
32.1718 137.281 l
32.5885 136.062 33.2395 135.041 34.1250 134.218  c
34.9062 133.500 l
35.8020 132.656 36.3984 131.987 36.6953 131.492  c
36.9921 130.997 37.1406 130.432 37.1406 129.796  c
37.1406 129.057 36.9583 128.463 36.5937 128.015  c
36.2291 127.567 35.7500 127.343 35.1562 127.343  c
34.4895 127.343 33.9270 127.526 33.4687 127.890  c
33.3020 128.026 33.1927 128.510 33.1406 129.343  c
33.1406 129.515 l
32.4062 129.515 l
32.4062 127.546 l
33.4583 127.099 34.4322 126.875 35.3281 126.875  c
36.3072 126.875 37.1093 127.151 37.7343 127.703  c
38.3593 128.255 38.6718 128.953 38.6718 129.796  c
38.6718 130.942 37.9635 132.000 36.5468 132.968  c
35.6718 133.578 l
34.2656 134.546 33.4947 135.599 33.3593 136.734  c
38.6250 136.734 l
38.6250 138.000 l
32.1718 138.000 l
h
41.0781 138.000 m
41.0781 136.187 l
42.8906 136.187 l
42.8906 138.000 l
41.0781 138.000 l
h
48.5000 138.265 m
47.3854 138.265 46.4843 137.747 45.7968 136.710  c
45.1093 135.674 44.7656 134.307 44.7656 132.609  c
44.7656 130.869 45.1093 129.481 45.7968 128.445  c
46.4843 127.408 47.4062 126.890 48.5625 126.890  c
49.7187 126.890 50.6406 127.406 51.3281 128.437  c
52.0156 129.468 52.3593 130.854 52.3593 132.593  c
52.3593 134.333 52.0130 135.713 51.3203 136.734  c
50.6276 137.755 49.6875 138.265 48.5000 138.265  c
h
48.5312 137.812 m
50.0625 137.885 50.8281 136.114 50.8281 132.500  c
50.8281 129.052 50.0729 127.328 48.5625 127.328  c
47.0625 127.328 46.3125 129.078 46.3125 132.578  c
46.3125 136.005 47.0520 137.750 48.5312 137.812  c
h
58.2812 127.062 m
58.2812 136.109 l
58.3281 136.828 l
58.3489 137.119 58.4349 137.309 58.5859 137.398  c
58.7369 137.487 59.0468 137.531 59.5156 137.531  c
60.3750 137.546 l
60.3750 138.000 l
54.7656 138.000 l
54.7656 137.546 l
55.6250 137.531 l
56.0833 137.531 56.3880 137.487 56.5390 137.398  c
56.6901 137.309 56.7760 137.119 56.7968 136.828  c
56.8437 136.109 l
56.8437 129.375 l
56.7968 128.640 l
56.7968 128.296 56.6979 128.125 56.5000 128.125  c
56.3541 128.125 56.0156 128.171 55.4843 128.265  c
54.7656 128.390 l
54.7656 127.937 l
58.2812 127.062 l
h
63.7187 138.015 m
63.7187 136.187 l
64.4375 136.187 l
64.4531 136.359 l
64.4687 136.921 l
64.5000 137.515 64.9687 137.812 65.8750 137.812  c
66.5520 137.812 67.0885 137.549 67.4843 137.023  c
67.8802 136.497 68.0781 135.781 68.0781 134.875  c
68.0781 133.843 67.7708 133.106 67.1562 132.664  c
66.5416 132.221 65.5416 132.000 64.1562 132.000  c
63.8906 132.000 l
63.8906 127.156 l
69.3593 127.156 l
69.3593 128.421 l
64.3437 128.421 l
64.3437 131.453 l
65.0156 131.453 l
68.0677 131.453 69.5937 132.614 69.5937 134.937  c
69.5937 135.979 69.2421 136.794 68.5390 137.382  c
67.8359 137.971 66.8645 138.265 65.6250 138.265  c
65.0104 138.265 64.3750 138.182 63.7187 138.015  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 53.6365 m
67.0000 53.6365 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
32.1718 64.0000 m
32.1718 63.2812 l
32.5885 62.0625 33.2395 61.0416 34.1250 60.2187  c
34.9062 59.5000 l
35.8020 58.6562 36.3984 57.9869 36.6953 57.4921  c
36.9921 56.9974 37.1406 56.4322 37.1406 55.7968  c
37.1406 55.0572 36.9583 54.4635 36.5937 54.0156  c
36.2291 53.5677 35.7500 53.3437 35.1562 53.3437  c
34.4895 53.3437 33.9270 53.5260 33.4687 53.8906  c
33.3020 54.0260 33.1927 54.5104 33.1406 55.3437  c
33.1406 55.5156 l
32.4062 55.5156 l
32.4062 53.5468 l
33.4583 53.0989 34.4322 52.8750 35.3281 52.8750  c
36.3072 52.8750 37.1093 53.1510 37.7343 53.7031  c
38.3593 54.2552 38.6718 54.9531 38.6718 55.7968  c
38.6718 56.9427 37.9635 58.0000 36.5468 58.9687  c
35.6718 59.5781 l
34.2656 60.5468 33.4947 61.5989 33.3593 62.7343  c
38.6250 62.7343 l
38.6250 64.0000 l
32.1718 64.0000 l
h
41.0781 64.0000 m
41.0781 62.1875 l
42.8906 62.1875 l
42.8906 64.0000 l
41.0781 64.0000 l
h
48.5000 64.2656 m
47.3854 64.2656 46.4843 63.7474 45.7968 62.7109  c
45.1093 61.6744 44.7656 60.3072 44.7656 58.6093  c
44.7656 56.8697 45.1093 55.4817 45.7968 54.4453  c
46.4843 53.4088 47.4062 52.8906 48.5625 52.8906  c
49.7187 52.8906 50.6406 53.4062 51.3281 54.4375  c
52.0156 55.4687 52.3593 56.8541 52.3593 58.5937  c
52.3593 60.3333 52.0130 61.7135 51.3203 62.7343  c
50.6276 63.7552 49.6875 64.2656 48.5000 64.2656  c
h
48.5312 63.8125 m
50.0625 63.8854 50.8281 62.1145 50.8281 58.5000  c
50.8281 55.0520 50.0729 53.3281 48.5625 53.3281  c
47.0625 53.3281 46.3125 55.0781 46.3125 58.5781  c
46.3125 62.0052 47.0520 63.7500 48.5312 63.8125  c
h
54.1718 64.0000 m
54.1718 63.2812 l
54.5885 62.0625 55.2395 61.0416 56.1250 60.2187  c
56.9062 59.5000 l
57.8020 58.6562 58.3984 57.9869 58.6953 57.4921  c
58.9921 56.9974 59.1406 56.4322 59.1406 55.7968  c
59.1406 55.0572 58.9583 54.4635 58.5937 54.0156  c
58.2291 53.5677 57.7500 53.3437 57.1562 53.3437  c
56.4895 53.3437 55.9270 53.5260 55.4687 53.8906  c
55.3020 54.0260 55.1927 54.5104 55.1406 55.3437  c
55.1406 55.5156 l
54.4062 55.5156 l
54.4062 53.5468 l
55.4583 53.0989 56.4322 52.8750 57.3281 52.8750  c
58.3072 52.8750 59.1093 53.1510 59.7343 53.7031  c
60.3593 54.2552 60.6718 54.9531 60.6718 55.7968  c
60.6718 56.9427 59.9635 58.0000 58.5468 58.9687  c
57.6718 59.5781 l
56.2656 60.5468 55.4947 61.5989 55.3593 62.7343  c
60.6250 62.7343 l
60.6250 64.0000 l
54.1718 64.0000 l
h
66.5000 64.2656 m
65.3854 64.2656 64.4843 63.7474 63.7968 62.7109  c
63.1093 61.6744 62.7656 60.3072 62.7656 58.6093  c
62.7656 56.8697 63.1093 55.4817 63.7968 54.4453  c
64.4843 53.4088 65.4062 52.8906 66.5625 52.8906  c
67.7187 52.8906 68.6406 53.4062 69.3281 54.4375  c
70.0156 55.4687 70.3593 56.8541 70.3593 58.5937  c
70.3593 60.3333 70.0130 61.7135 69.3203 62.7343  c
68.6276 63.7552 67.6875 64.2656 66.5000 64.2656  c
h
66.5312 63.8125 m
68.0625 63.8854 68.8281 62.1145 68.8281 58.5000  c
68.8281 55.0520 68.0729 53.3281 66.5625 53.3281  c
65.0625 53.3281 64.3125 55.0781 64.3125 58.5781  c
64.3125 62.0052 65.0520 63.7500 66.5312 63.8125  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 334.749 m
69.0000 334.749 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 319.953 m
69.0000 319.953 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 305.158 m
69.0000 305.158 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 290.362 m
69.0000 290.362 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 260.772 m
69.0000 260.772 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 245.976 m
69.0000 245.976 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 231.181 m
69.0000 231.181 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 216.385 m
69.0000 216.385 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 186.795 m
69.0000 186.795 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 171.999 m
69.0000 171.999 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 157.204 m
69.0000 157.204 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 142.408 m
69.0000 142.408 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 112.818 m
69.0000 112.818 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 98.0226 m
69.0000 98.0226 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 83.2272 m
69.0000 83.2272 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 68.4319 m
69.0000 68.4319 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 38.8411 m
69.0000 38.8411 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 24.0457 m
69.0000 24.0457 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
71.0000 9.25033 m
69.0000 9.25033 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
0 0 0 RG
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
