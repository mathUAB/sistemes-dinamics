%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 138 575 653
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, December 6, 2022 5:39:50 PM CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
350 324 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
350.000 0 l
350.000 324.000 l
0 324.000 l
0 0 l
h
f
0 0 0 RG
1.50000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
0 0 350 324 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 340 314 rc
1.00000 w
q
Q
1.50000 w
1.00000 w
q
Q
1.50000 w
q
q
1.00000 0 0 RG
34.0000 8.02222 291.559 265.977 rc
newpath
152.286 47.2367 m
161.705 42.5601 l
170.214 38.7776 l
180.093 34.9057 l
190.314 31.4852 l
200.695 28.6264 l
210.437 26.5209 l
220.566 24.9471 l
230.999 24.0187 l
241.254 23.8427 l
251.545 24.4736 l
260.304 25.7246 l
269.723 27.9122 l
278.613 30.9224 l
286.555 34.5626 l
293.174 38.4585 l
300.249 43.7604 l
305.527 48.7606 l
310.809 55.0825 l
314.704 61.0575 l
318.134 67.9365 l
320.595 74.7204 l
322.353 81.9577 l
323.272 88.6779 l
323.559 95.9379 l
323.137 103.423 l
322.220 109.845 l
320.707 116.640 l
318.628 123.467 l
316.143 129.927 l
313.364 135.948 l
309.900 142.351 l
306.496 147.842 l
302.602 153.423 l
298.877 158.228 l
294.628 163.208 l
290.490 167.638 l
286.050 172.010 l
281.620 176.037 l
276.913 180.000 l
272.331 183.583 l
267.616 187.021 l
262.925 190.216 l
258.615 192.973 l
253.686 195.935 l
249.298 198.415 l
244.648 200.892 l
240.234 203.113 l
235.379 205.417 l
231.220 207.282 l
226.556 209.264 l
222.359 210.952 l
217.832 212.677 l
213.982 214.072 l
209.661 215.560 l
205.554 216.903 l
201.515 218.158 l
197.559 219.328 l
193.822 220.380 l
189.852 221.445 l
186.137 222.392 l
182.298 223.324 l
178.886 224.112 l
175.184 224.927 l
171.707 225.655 l
168.303 226.334 l
164.817 226.994 l
161.668 227.561 l
158.504 228.103 l
155.081 228.659 l
152.044 229.126 l
149.000 229.570 l
145.966 229.988 l
143.231 230.344 l
140.373 230.695 l
137.593 231.017 l
134.681 231.332 l
132.163 231.586 l
129.318 231.854 l
126.803 232.072 l
124.365 232.268 l
121.796 232.457 l
119.271 232.624 l
117.021 232.759 l
114.680 232.883 l
112.442 232.986 l
110.067 233.079 l
108.054 233.144 l
105.789 233.202 l
103.705 233.240 l
101.684 233.263 l
99.7027 233.270 l
97.7235 233.263 l
95.6708 233.240 l
93.8288 233.204 l
92.0474 233.156 l
90.1829 233.090 l
88.3626 233.011 l
86.7623 232.927 l
84.9068 232.813 l
83.3872 232.705 l
81.6471 232.566 l
80.0232 232.418 l
78.6031 232.275 l
77.0390 232.102 l
75.4991 231.913 l
74.0005 231.712 l
72.6407 231.513 l
71.2622 231.294 l
69.8677 231.054 l
68.5085 230.801 l
67.1420 230.526 l
65.9645 230.272 l
64.6678 229.972 l
63.3959 229.655 l
62.1984 229.335 l
61.1345 229.032 l
59.8983 228.656 l
58.8753 228.323 l
57.7128 227.920 l
56.7081 227.548 l
55.6319 227.124 l
54.6321 226.703 l
53.6146 226.247 l
52.7032 225.812 l
51.7444 225.325 l
50.7751 224.800 l
49.9532 224.325 l
49.0883 223.794 l
48.2195 223.225 l
47.3937 222.647 l
46.6174 222.068 l
45.7816 221.401 l
45.0541 220.779 l
44.3018 220.091 l
43.6422 219.446 l
42.9451 218.715 l
42.3122 218.003 l
41.6749 217.232 l
41.0758 216.451 l
40.4745 215.603 l
39.9208 214.757 l
39.3806 213.861 l
38.8715 212.939 l
38.4276 212.062 l
37.9475 211.020 l
37.5447 210.054 l
37.1437 208.987 l
36.7883 207.929 l
36.4271 206.709 l
36.1437 205.613 l
35.8565 204.323 l
35.6277 203.102 l
35.4151 201.716 l
35.2646 200.476 l
35.1319 199.011 l
35.0448 197.540 l
35.0002 196.014 l
35.0000 194.435 l
35.0436 192.860 l
35.1418 191.091 l
35.2874 189.338 l
35.4990 187.419 l
35.7452 185.613 l
36.0814 183.539 l
36.4706 181.472 l
36.9287 179.327 l
37.4867 176.995 l
38.0773 174.760 l
38.7637 172.382 l
39.6240 169.647 l
40.5025 167.067 l
41.5058 164.323 l
42.6431 161.418 l
43.7998 158.643 l
45.1588 155.570 l
46.6453 152.399 l
48.3989 148.870 l
50.0971 145.634 l
52.2454 141.755 l
54.3707 138.119 l
56.6605 134.391 l
59.3454 130.236 l
62.2899 125.912 l
65.2008 121.846 l
68.5506 117.390 l
72.0930 112.909 l
76.2579 107.909 l
80.1510 103.469 l
84.9729 98.2494 l
89.8656 93.2385 l
95.0720 88.1921 l
100.657 83.0765 l
106.755 77.8153 l
113.674 72.2217 l
120.439 67.1112 l
127.515 62.1191 l
135.518 56.8846 l
143.947 51.8181 l
152.286 47.2367 l
S
cliprestore
newpath
0 0 m
0 314.000 l
340.000 314.000 l
340.000 0 l
h
W
Q
q
[ 2.00000 5.00000 ] 0 d
0 0 1.00000 RG
34.0000 8.02222 291.559 265.977 rc
newpath
152.286 273.000 m
152.286 271.617 l
152.286 270.414 l
152.286 269.061 l
152.286 267.699 l
152.286 266.344 l
152.286 265.087 l
152.286 263.786 l
152.286 262.440 l
152.286 261.099 l
152.286 259.719 l
152.286 258.504 l
152.286 257.136 l
152.286 255.762 l
152.286 254.438 l
152.286 253.236 l
152.286 251.806 l
152.286 250.595 l
152.286 249.187 l
152.286 247.940 l
152.286 246.572 l
152.286 245.269 l
152.286 243.910 l
152.286 242.661 l
152.286 241.315 l
152.286 239.916 l
152.286 238.699 l
152.286 237.384 l
152.286 236.026 l
152.286 234.697 l
152.286 233.411 l
152.286 231.984 l
152.286 230.701 l
152.286 229.331 l
152.286 228.090 l
152.286 226.733 l
152.286 225.457 l
152.286 224.122 l
152.286 222.817 l
152.286 221.451 l
152.286 220.136 l
152.286 218.791 l
152.286 217.456 l
152.286 216.230 l
152.286 214.825 l
152.286 213.568 l
152.286 212.228 l
152.286 210.946 l
152.286 209.522 l
152.286 208.289 l
152.286 206.889 l
152.286 205.614 l
152.286 204.218 l
152.286 203.014 l
152.286 201.643 l
152.286 200.319 l
152.286 198.995 l
152.286 197.676 l
152.286 196.410 l
152.286 195.040 l
152.286 193.735 l
152.286 192.361 l
152.286 191.118 l
152.286 189.743 l
152.286 188.427 l
152.286 187.114 l
152.286 185.742 l
152.286 184.479 l
152.286 183.185 l
152.286 181.756 l
152.286 180.463 l
152.286 179.140 l
152.286 177.795 l
152.286 176.559 l
152.286 175.241 l
152.286 173.933 l
152.286 172.533 l
152.286 171.299 l
152.286 169.874 l
152.286 168.588 l
152.286 167.316 l
152.286 165.949 l
152.286 164.575 l
152.286 163.326 l
152.286 161.999 l
152.286 160.704 l
152.286 159.300 l
152.286 158.085 l
152.286 156.690 l
152.286 155.379 l
152.286 154.080 l
152.286 152.780 l
152.286 151.454 l
152.286 150.049 l
152.286 148.760 l
152.286 147.488 l
152.286 146.129 l
152.286 144.772 l
152.286 143.554 l
152.286 142.112 l
152.286 140.905 l
152.286 139.493 l
152.286 138.146 l
152.286 136.943 l
152.286 135.590 l
152.286 134.228 l
152.286 132.873 l
152.286 131.616 l
152.286 130.315 l
152.286 128.969 l
152.286 127.628 l
152.286 126.248 l
152.286 125.033 l
152.286 123.664 l
152.286 122.291 l
152.286 120.967 l
152.286 119.765 l
152.286 118.335 l
152.286 117.124 l
152.286 115.715 l
152.286 114.468 l
152.286 113.100 l
152.286 111.798 l
152.286 110.438 l
152.286 109.190 l
152.286 107.844 l
152.286 106.445 l
152.286 105.228 l
152.286 103.913 l
152.286 102.555 l
152.286 101.226 l
152.286 99.9405 l
152.286 98.5129 l
152.286 97.2301 l
152.286 95.8604 l
152.286 94.6193 l
152.286 93.2625 l
152.286 91.9858 l
152.286 90.6513 l
152.286 89.3466 l
152.286 87.9807 l
152.286 86.6651 l
152.286 85.3198 l
152.286 83.9856 l
152.286 82.7596 l
152.286 81.3545 l
152.286 80.0977 l
152.286 78.7577 l
152.286 77.4752 l
152.286 76.0512 l
152.286 74.8180 l
152.286 73.4184 l
152.286 72.1428 l
152.286 70.7475 l
152.286 69.5436 l
152.286 68.1724 l
152.286 66.8480 l
152.286 65.5244 l
152.286 64.2057 l
152.286 62.9389 l
152.286 61.5693 l
152.286 60.2641 l
152.286 58.8904 l
152.286 57.6469 l
152.286 56.2725 l
152.286 54.9561 l
152.286 53.6430 l
152.286 52.2714 l
152.286 51.0080 l
152.286 49.7142 l
152.286 48.2857 l
152.286 46.9923 l
152.286 45.6696 l
152.286 44.3244 l
152.286 43.0879 l
152.286 41.7699 l
152.286 40.4618 l
152.286 39.0626 l
152.286 37.8279 l
152.286 36.4033 l
152.286 35.1177 l
152.286 33.8457 l
152.286 32.4778 l
152.286 31.1044 l
152.286 29.8549 l
152.286 28.5279 l
152.286 27.2328 l
152.286 25.8291 l
152.286 24.6144 l
152.286 23.2193 l
152.286 21.9078 l
152.286 20.6090 l
152.286 19.3091 l
152.286 17.9834 l
152.286 16.5781 l
152.286 15.2896 l
152.286 14.0177 l
152.286 12.6580 l
152.286 11.3013 l
152.286 10.0222 l
S
cliprestore
newpath
0 0 m
0 314.000 l
340.000 314.000 l
340.000 0 l
h
W
Q
q
1.00000 w
2 J
0 j
0 0.501961 0 RG
[ 1.00000 0 0 1.00000 148.286 43.2367 ] concat
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
S
newpath
7.00000 3.50000 m
7.00000 5.43299 5.43299 7.00000 3.50000 7.00000  c
1.56700 7.00000 0 5.43299 0 3.50000  c
0 1.56700 1.56700 0 3.50000 0  c
5.43299 0 7.00000 1.56700 7.00000 3.50000  c
h
f
[ 1.00000 0 0 1.00000 -148.286 -43.2367 ] concat
Q
Q
q
q
1.00000 w
newpath
33.0000 273.000 m
323.559 273.000 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
171 295 16 18 rc
newpath
178.890 305.968 m
178.000 303.953 l
177.625 303.203 l
177.500 302.921 177.393 302.744 177.304 302.671  c
177.216 302.599 177.057 302.552 176.828 302.531  c
176.390 302.500 l
176.250 302.500 l
176.328 302.046 l
178.718 302.046 l
180.156 305.171 l
180.500 304.906 l
181.447 304.125 181.921 303.479 181.921 302.968  c
181.921 302.697 181.817 302.390 181.609 302.046  c
183.046 302.046 l
183.099 302.224 183.125 302.375 183.125 302.500  c
183.125 302.916 182.976 303.296 182.679 303.640  c
182.382 303.984 181.718 304.541 180.687 305.312  c
180.343 305.578 l
181.546 308.109 l
181.984 308.921 l
182.171 309.296 182.421 309.494 182.734 309.515  c
183.203 309.531 l
183.328 309.546 l
183.250 310.000 l
180.843 310.000 l
179.125 306.375 l
178.500 306.937 l
177.500 307.833 177.000 308.604 177.000 309.250  c
177.000 309.510 177.083 309.760 177.250 310.000  c
175.703 310.000 l
175.671 309.864 175.656 309.760 175.656 309.687  c
175.656 309.062 176.114 308.349 177.031 307.546  c
178.171 306.593 l
178.890 305.968 l
h
f
Q
cliprestore
newpath
0 0 m
0 314.000 l
340.000 314.000 l
340.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
86.5200 273.000 m
86.5200 276.370 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
92.2812 287.062 m
92.2812 296.109 l
92.3281 296.828 l
92.3489 297.119 92.4349 297.309 92.5859 297.398  c
92.7369 297.487 93.0468 297.531 93.5156 297.531  c
94.3750 297.546 l
94.3750 298.000 l
88.7656 298.000 l
88.7656 297.546 l
89.6250 297.531 l
90.0833 297.531 90.3880 297.487 90.5390 297.398  c
90.6901 297.309 90.7760 297.119 90.7968 296.828  c
90.8437 296.109 l
90.8437 289.375 l
90.7968 288.640 l
90.7968 288.296 90.6979 288.125 90.5000 288.125  c
90.3541 288.125 90.0156 288.171 89.4843 288.265  c
88.7656 288.390 l
88.7656 287.937 l
92.2812 287.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
152.286 273.000 m
152.286 276.370 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
154.171 298.000 m
154.171 297.281 l
154.588 296.062 155.239 295.041 156.125 294.218  c
156.906 293.500 l
157.802 292.656 158.398 291.987 158.695 291.492  c
158.992 290.997 159.140 290.432 159.140 289.796  c
159.140 289.057 158.958 288.463 158.593 288.015  c
158.229 287.567 157.750 287.343 157.156 287.343  c
156.489 287.343 155.927 287.526 155.468 287.890  c
155.302 288.026 155.192 288.510 155.140 289.343  c
155.140 289.515 l
154.406 289.515 l
154.406 287.546 l
155.458 287.099 156.432 286.875 157.328 286.875  c
158.307 286.875 159.109 287.151 159.734 287.703  c
160.359 288.255 160.671 288.953 160.671 289.796  c
160.671 290.942 159.963 292.000 158.546 292.968  c
157.671 293.578 l
156.265 294.546 155.494 295.599 155.359 296.734  c
160.625 296.734 l
160.625 298.000 l
154.171 298.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
218.053 273.000 m
218.053 276.370 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
220.359 297.921 m
220.359 296.015 l
221.078 296.015 l
221.093 296.171 l
221.109 296.687 l
221.109 297.000 221.294 297.268 221.664 297.492  c
222.033 297.716 222.484 297.828 223.015 297.828  c
223.651 297.828 224.164 297.575 224.554 297.070  c
224.945 296.565 225.140 295.895 225.140 295.062  c
225.140 294.239 224.885 293.596 224.375 293.132  c
223.864 292.669 223.156 292.437 222.250 292.437  c
221.343 292.437 l
221.343 292.000 l
221.828 292.000 l
223.880 292.000 224.906 291.177 224.906 289.531  c
224.906 288.062 224.260 287.328 222.968 287.328  c
222.406 287.328 221.911 287.447 221.484 287.687  c
221.328 287.781 221.224 288.171 221.171 288.859  c
221.156 288.968 l
220.437 288.968 l
220.437 287.312 l
221.218 287.020 222.104 286.875 223.093 286.875  c
224.093 286.875 224.885 287.099 225.468 287.546  c
226.052 287.994 226.343 288.604 226.343 289.375  c
226.343 290.666 225.583 291.588 224.062 292.140  c
224.989 292.380 225.653 292.721 226.054 293.164  c
226.455 293.606 226.656 294.224 226.656 295.015  c
226.656 296.015 226.333 296.807 225.687 297.390  c
225.041 297.974 224.161 298.265 223.046 298.265  c
222.015 298.265 221.119 298.151 220.359 297.921  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
283.819 273.000 m
283.819 276.370 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
289.421 294.937 m
284.453 294.937 l
284.453 294.203 l
289.875 286.984 l
290.687 286.984 l
290.687 293.843 l
292.140 293.843 l
292.140 294.937 l
290.687 294.937 l
290.687 296.109 l
290.687 296.682 290.731 297.052 290.820 297.218  c
290.908 297.385 291.104 297.479 291.406 297.500  c
291.906 297.531 l
292.046 297.546 l
292.046 298.000 l
287.890 298.000 l
287.890 297.546 l
288.015 297.531 l
288.781 297.500 l
289.041 297.489 289.213 297.393 289.296 297.210  c
289.380 297.028 289.421 296.661 289.421 296.109  c
289.421 294.937 l
h
285.265 293.843 m
289.421 293.843 l
289.421 288.312 l
285.265 293.843 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
53.6367 273.000 m
53.6367 274.685 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
119.403 273.000 m
119.403 274.685 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
185.169 273.000 m
185.169 274.685 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
250.936 273.000 m
250.936 274.685 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
316.702 273.000 m
316.702 274.685 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
q
1.00000 w
newpath
33.0000 273.000 m
33.0000 10.0222 l
S
Q
1.00000 w
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
1 132 17 18 rc
newpath
4.96875 149.890 m
5.86458 149.265 6.98958 148.328 8.34375 147.078  c
8.62500 146.812 l
8.56250 145.677 8.41666 144.481 8.18750 143.226  c
7.95833 141.971 7.71875 141.062 7.46875 140.500  c
7.25000 140.031 7.07812 139.755 6.95312 139.671  c
6.82812 139.588 6.48958 139.531 5.93750 139.500  c
5.76562 139.500 l
5.84375 139.046 l
8.51562 139.046 l
9.27604 140.838 9.70833 142.942 9.81250 145.359  c
10.7187 144.187 l
11.6041 143.062 12.1953 142.237 12.4921 141.710  c
12.7890 141.184 12.9375 140.697 12.9375 140.250  c
12.9375 139.791 12.7447 139.390 12.3593 139.046  c
14.1718 139.046 l
14.2760 139.265 14.3281 139.474 14.3281 139.671  c
14.3281 140.088 14.1927 140.523 13.9218 140.976  c
13.6510 141.429 13.0833 142.171 12.2187 143.203  c
9.45312 146.531 l
8.34895 147.854 7.52083 148.974 6.96875 149.890  c
4.96875 149.890 l
h
f
Q
cliprestore
newpath
0 0 m
0 314.000 l
340.000 314.000 l
340.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
33.0000 273.000 m
29.6300 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
30.5000 284.265 m
29.3854 284.265 28.4843 283.747 27.7968 282.710  c
27.1093 281.674 26.7656 280.307 26.7656 278.609  c
26.7656 276.869 27.1093 275.481 27.7968 274.445  c
28.4843 273.408 29.4062 272.890 30.5625 272.890  c
31.7187 272.890 32.6406 273.406 33.3281 274.437  c
34.0156 275.468 34.3593 276.854 34.3593 278.593  c
34.3593 280.333 34.0130 281.713 33.3203 282.734  c
32.6276 283.755 31.6875 284.265 30.5000 284.265  c
h
30.5312 283.812 m
32.0625 283.885 32.8281 282.114 32.8281 278.500  c
32.8281 275.052 32.0729 273.328 30.5625 273.328  c
29.0625 273.328 28.3125 275.078 28.3125 278.578  c
28.3125 282.005 29.0520 283.750 30.5312 283.812  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 207.255 m
29.6300 207.255 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.2812 207.062 m
31.2812 216.109 l
31.3281 216.828 l
31.3489 217.119 31.4349 217.309 31.5859 217.398  c
31.7369 217.487 32.0468 217.531 32.5156 217.531  c
33.3750 217.546 l
33.3750 218.000 l
27.7656 218.000 l
27.7656 217.546 l
28.6250 217.531 l
29.0833 217.531 29.3880 217.487 29.5390 217.398  c
29.6901 217.309 29.7760 217.119 29.7968 216.828  c
29.8437 216.109 l
29.8437 209.375 l
29.7968 208.640 l
29.7968 208.296 29.6979 208.125 29.5000 208.125  c
29.3541 208.125 29.0156 208.171 28.4843 208.265  c
27.7656 208.390 l
27.7656 207.937 l
31.2812 207.062 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 141.511 m
29.6300 141.511 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.1718 152.000 m
27.1718 151.281 l
27.5885 150.062 28.2395 149.041 29.1250 148.218  c
29.9062 147.500 l
30.8020 146.656 31.3984 145.987 31.6953 145.492  c
31.9921 144.997 32.1406 144.432 32.1406 143.796  c
32.1406 143.057 31.9583 142.463 31.5937 142.015  c
31.2291 141.567 30.7500 141.343 30.1562 141.343  c
29.4895 141.343 28.9270 141.526 28.4687 141.890  c
28.3020 142.026 28.1927 142.510 28.1406 143.343  c
28.1406 143.515 l
27.4062 143.515 l
27.4062 141.546 l
28.4583 141.099 29.4322 140.875 30.3281 140.875  c
31.3072 140.875 32.1093 141.151 32.7343 141.703  c
33.3593 142.255 33.6718 142.953 33.6718 143.796  c
33.6718 144.942 32.9635 146.000 31.5468 146.968  c
30.6718 147.578 l
29.2656 148.546 28.4947 149.599 28.3593 150.734  c
33.6250 150.734 l
33.6250 152.000 l
27.1718 152.000 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 75.7666 m
29.6300 75.7666 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
27.3593 85.9218 m
27.3593 84.0156 l
28.0781 84.0156 l
28.0937 84.1718 l
28.1093 84.6875 l
28.1093 85.0000 28.2942 85.2682 28.6640 85.4921  c
29.0338 85.7161 29.4843 85.8281 30.0156 85.8281  c
30.6510 85.8281 31.1640 85.5755 31.5546 85.0703  c
31.9453 84.5651 32.1406 83.8958 32.1406 83.0625  c
32.1406 82.2395 31.8854 81.5963 31.3750 81.1328  c
30.8645 80.6692 30.1562 80.4375 29.2500 80.4375  c
28.3437 80.4375 l
28.3437 80.0000 l
28.8281 80.0000 l
30.8802 80.0000 31.9062 79.1770 31.9062 77.5312  c
31.9062 76.0625 31.2604 75.3281 29.9687 75.3281  c
29.4062 75.3281 28.9114 75.4479 28.4843 75.6875  c
28.3281 75.7812 28.2239 76.1718 28.1718 76.8593  c
28.1562 76.9687 l
27.4375 76.9687 l
27.4375 75.3125 l
28.2187 75.0208 29.1041 74.8750 30.0937 74.8750  c
31.0937 74.8750 31.8854 75.0989 32.4687 75.5468  c
33.0520 75.9947 33.3437 76.6041 33.3437 77.3750  c
33.3437 78.6666 32.5833 79.5885 31.0625 80.1406  c
31.9895 80.3802 32.6536 80.7213 33.0546 81.1640  c
33.4557 81.6067 33.6562 82.2239 33.6562 83.0156  c
33.6562 84.0156 33.3333 84.8072 32.6875 85.3906  c
32.0416 85.9739 31.1614 86.2656 30.0468 86.2656  c
29.0156 86.2656 28.1197 86.1510 27.3593 85.9218  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 10.0222 m
29.6300 10.0222 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
31.4218 17.9375 m
26.4531 17.9375 l
26.4531 17.2031 l
31.8750 9.98437 l
32.6875 9.98437 l
32.6875 16.8437 l
34.1406 16.8437 l
34.1406 17.9375 l
32.6875 17.9375 l
32.6875 19.1093 l
32.6875 19.6822 32.7317 20.0520 32.8203 20.2187  c
32.9088 20.3854 33.1041 20.4791 33.4062 20.5000  c
33.9062 20.5312 l
34.0468 20.5468 l
34.0468 21.0000 l
29.8906 21.0000 l
29.8906 20.5468 l
30.0156 20.5312 l
30.7812 20.5000 l
31.0416 20.4895 31.2135 20.3932 31.2968 20.2109  c
31.3802 20.0286 31.4218 19.6614 31.4218 19.1093  c
31.4218 17.9375 l
h
27.2656 16.8437 m
31.4218 16.8437 l
31.4218 11.3125 l
27.2656 16.8437 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 240.127 m
31.3150 240.127 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 174.383 m
31.3150 174.383 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 108.638 m
31.3150 108.638 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
33.0000 42.8944 m
31.3150 42.8944 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
1.50000 w
Q
Q
cliprestore
0 0 350 324 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
